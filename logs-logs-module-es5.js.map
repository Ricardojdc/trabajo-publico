{"version":3,"sources":["webpack:///src/app/logs/logs-routing.module.ts","webpack:///src/app/services/logs.service.ts","webpack:///src/app/logs/logs.component.html","webpack:///src/app/logs/logs.component.ts","webpack:///src/app/logs/logs.module.ts"],"names":["routes","path","component","LogsRoutingModule","forChild","imports","exports","ENDPOINT","LogsService","http","commonService","get","headers","providedIn","LogsComponent","dialog","logService","dataSource","idFilter","fechaFilter","usuarioFilter","contenidoFilter","tipoLogFilter","displayedColumns","filterValues","id_log","fecha","usuario","contenido","tipo_log","getLogs","getAllLogs","toPromise","RESPONSE","ok","data","sort","paginator","filterPredicate","createFilter","onChanges","filterFunction","log","filter","searchTerms","JSON","parse","toString","indexOf","toLowerCase","valueChanges","pipe","subscribe","idLog","tipoLog","stringify","selector","templateUrl","styleUrls","LogsModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMA,MAAM,GAAW,CAAC;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAAD,CAAvB;;UAMaC,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAHnB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;4HAAjBG,iB,EAAiB;AAAA;AAAA,oBAFlB,4DAEkB;AAAA,S;AAFN,O;;;;;wEAEXA,iB,EAAiB;gBAJ7B,sDAI6B;iBAJpB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIoB,U;;;;;;;;;;;;;;;;;;ACX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMC,QAAQ,GAAG,KAAjB;;UAKaC,W;AACX;AAEA,6BAAoBC,IAApB,EAA8CC,aAA9C,EAA4E;AAAA;;AAAxD,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,aAAA,GAAAA,aAAA,CAA8B,CAC5E;AACA;AACA;AACA;AACC;;;;uCAEY;AACX,mBAAO,KAAKD,IAAL,CAAUE,GAAV,WAA8B,oEAA9B,cAAyCJ,QAAzC,WAAyD;AAAEK,qBAAO,EAAE,KAAKF,aAAL,CAAmBE;AAA9B,aAAzD,CAAP;AACD;;;;;;;yBAZUJ,W,EAAW,uH,EAAA,4H;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVK,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPR;;AACI;;AACA;;AACJ;;;;;;AAFoB;;AAAA;;;;;;AAIpB;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAIpC;;AACI;;AACA;;AACJ;;;;;;AAFoB;;AAAA;;;;;;AAIpB;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIpC;;AACI;;AACA;;AACJ;;;;;;AAFoB;;AAAA;;;;;;AAIpB;;AAAoC;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAIpC;;AACI;;AACA;;AACJ;;;;;;AAFoB;;AAAA;;;;;;AAIpB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIpC;;AACI;;AACA;;AACJ;;;;;;AAFoB;;AAAA;;;;;;AAIpB;;AAAoC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGxC;;;;;;AACA;;;;;;;;UClCCC,a;AAgBX,+BAAmBC,MAAnB,EAA8CC,UAA9C,EAAuE;AAAA;;AAApD,eAAAD,MAAA,GAAAA,MAAA;AAA2B,eAAAC,UAAA,GAAAA,UAAA;AAX9C,eAAAC,UAAA,GAAsC,IAAI,0EAAJ,EAAtC;AAEA,eAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AACA,eAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AACA,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACA,eAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AACA,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAEA,eAAAC,gBAAA,GAA6B,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,EAA+B,WAA/B,EAA4C,UAA5C,CAA7B;AACQ,eAAAC,YAAA,GAAe;AAAEC,kBAAM,EAAE,EAAV;AAAcC,iBAAK,EAAE,EAArB;AAAyBC,mBAAO,EAAE,EAAlC;AAAsCC,qBAAS,EAAE,EAAjD;AAAqDC,oBAAQ,EAAE;AAA/D,WAAf;AAEkE;;;;qCAE/D;AACT,iBAAKC,OAAL;AACD;;;oCAEe;;;;;;;;AACG,6BAAM,KAAKd,UAAL,CAAgBe,UAAhB,GAA6BC,SAA7B,EAAN;;;AAAXC,8B;;AACN,0BAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,6BAAKjB,UAAL,CAAgBkB,IAAhB,GAAuBF,QAAQ,CAACE,IAAhC;AACA,6BAAKlB,UAAL,CAAgBmB,IAAhB,GAAuB,KAAKA,IAA5B;AACA,6BAAKnB,UAAL,CAAgBoB,SAAhB,GAA4B,KAAKA,SAAjC;AACA,6BAAKpB,UAAL,CAAgBqB,eAAhB,GAAkC,KAAKC,YAAL,EAAlC;AAEA,6BAAKC,SAAL;AACD;;;;;;;;;AACF;;;yCAEW;AACV,gBAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAWC,MAAX,EAAuC;AAC1D,kBAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAApB;AAEA,qBAAOD,GAAG,CAACjB,MAAJ,CAAWsB,QAAX,GAAsBC,OAAtB,CAA8BJ,WAAW,CAACnB,MAA1C,MAAsD,CAAC,CAAvD,IACAiB,GAAG,CAAChB,KAAJ,CAAUuB,WAAV,GAAwBD,OAAxB,CAAgCJ,WAAW,CAAClB,KAAZ,CAAkBuB,WAAlB,EAAhC,MAAqE,CAAC,CADtE,IAEAP,GAAG,CAACd,SAAJ,CAAcqB,WAAd,GAA4BD,OAA5B,CAAoCJ,WAAW,CAAChB,SAAZ,CAAsBqB,WAAtB,EAApC,MAA6E,CAAC,CAF9E,IAGAP,GAAG,CAACb,QAAJ,CAAaoB,WAAb,GAA2BD,OAA3B,CAAmCJ,WAAW,CAACf,QAAZ,CAAqBoB,WAArB,EAAnC,MAA2E,CAAC,CAH5E,IAIAP,GAAG,CAACf,OAAJ,IAAe,IAJf,GAIsBe,GAAG,CAACf,OAAJ,CAAYsB,WAAZ,GAA0BD,OAA1B,CAAkCJ,WAAW,CAACjB,OAAZ,CAAoBsB,WAApB,EAAlC,MAAyE,CAAC,CAJhG,GAIoG,KAJ3G;AAKH,aARD;;AASA,mBAAOR,cAAP;AACH;;;sCAEW;AAAA;;AAEV,uEACE,CAAC,KAAKvB,QAAL,CAAcgC,YAAd,CAA2BC,IAA3B,CAAgC,iEAAU,EAAV,CAAhC,CAAD,EACA,KAAKhC,WAAL,CAAiB+B,YAAjB,CAA8BC,IAA9B,CAAmC,iEAAU,EAAV,CAAnC,CADA,EAEA,KAAK/B,aAAL,CAAmB8B,YAAnB,CAAgCC,IAAhC,CAAqC,iEAAU,EAAV,CAArC,CAFA,EAGA,KAAK9B,eAAL,CAAqB6B,YAArB,CAAkCC,IAAlC,CAAuC,iEAAU,EAAV,CAAvC,CAHA,EAIA,KAAK7B,aAAL,CAAmB4B,YAAnB,CAAgCC,IAAhC,CAAqC,iEAAU,EAAV,CAArC,CAJA,CADF,EAOGC,SAPH,CAOa,gBAML;AAAA;AAAA,kBALJC,KAKI;AAAA,kBAJJ3B,KAII;AAAA,kBAHJC,OAGI;AAAA,kBAFJC,SAEI;AAAA,kBADJ0B,OACI;;AACJ,mBAAI,CAAC9B,YAAL,CAAkBC,MAAlB,GAA2B4B,KAA3B;AACA,mBAAI,CAAC7B,YAAL,CAAkBE,KAAlB,GAA0BA,KAA1B;AACA,mBAAI,CAACF,YAAL,CAAkBG,OAAlB,GAA4BA,OAA5B;AACA,mBAAI,CAACH,YAAL,CAAkBI,SAAlB,GAA8BA,SAA9B;AACA,mBAAI,CAACJ,YAAL,CAAkBK,QAAlB,GAA6ByB,OAA7B;AACA,mBAAI,CAACrC,UAAL,CAAgB0B,MAAhB,GAAyBE,IAAI,CAACU,SAAL,CAAe,KAAI,CAAC/B,YAApB,CAAzB;AACH,aApBD;AAqBC;;;;;;;yBAtEUV,a,EAAa,mI,EAAA,mI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;4EAEb,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ADnBtB;;AACI;;AACI;;AAEI;;AACI;;AAKA;;AACJ;;AAEA;;AACI;;AAKA;;AACJ;;AAEA;;AACI;;AAKA;;AACJ;;AAEA;;AACI;;AAKA;;AACJ;;AAEA;;AACI;;AAKA;;AACJ;;AAEA;;AACA;;AACJ;;AACJ;;AACA;;AAEJ;;;;AArDyB;;AAAA;;AA+CM;;AAAA;;AACP;;AAAA;;AAGM;;AAAA,qFAAe,iBAAf,EAAe,qEAAf;;;;;;;;;wECrCjBA,a,EAAa;gBALzB,uDAKyB;iBALf;AACT0C,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;AAEmBrB,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBD,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;ACnB9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeauB,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBANZ,CACP,4DADO,EAEP,sEAFO,EAGP,8FAHO,CAMY;;;;4HAAVA,U,EAAU;AAAA,yBAPN,6DAOM;AAPO,oBAE1B,4DAF0B,EAG1B,sEAH0B,EAI1B,8FAJ0B;AAOP,S;AAHD,O;;;;;wEAGTA,U,EAAU;gBARtB,sDAQsB;iBARb;AACRC,wBAAY,EAAE,CAAC,6DAAD,CADN;AAERvD,mBAAO,EAAE,CACP,4DADO,EAEP,sEAFO,EAGP,8FAHO;AAFD,W;AAQa,U","file":"logs-logs-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogsComponent } from './logs.component';\n\nconst routes: Routes = [{ path: '', component: LogsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogsRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_API } from 'src/environments/environment';\nimport { CommonService } from '../shared/common.service';\nimport { Log } from '../shared/interfaces/log';\nimport { ApiResponse } from '../shared/interfaces/api-response';\n\nconst ENDPOINT = 'log';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogsService {\n  // headers: any;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  //   this.headers = new HttpHeaders({\n  //     'Content-Type':  'application/json',\n  //     'Authorization': `Bearer ${this.cookieService.get('token')}`\n  //   });\n  }\n\n  getAllLogs() {\n    return this.http.get<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers } );\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-table-container\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"id_log\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"idFilter\" placeholder=\"ID\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.id_log}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"fecha\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"fechaFilter\" placeholder=\"Fecha\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.fecha}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"usuario\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"usuarioFilter\" placeholder=\"Usuario\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.usuario}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"contenido\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"contenidoFilter\" placeholder=\"Contenido\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.contenido}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"tipo_log\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"tipoLogFilter\" placeholder=\"TipoLog\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.tipo_log}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LogsService } from '../services/logs.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Log } from '../shared/interfaces/log';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Log> = new MatTableDataSource();\n\n  idFilter = new FormControl();\n  fechaFilter = new FormControl();\n  usuarioFilter = new FormControl();\n  contenidoFilter = new FormControl();\n  tipoLogFilter = new FormControl();\n\n  displayedColumns: string[] = ['id_log', 'fecha', 'usuario', 'contenido', 'tipo_log'];\n  private filterValues = { id_log: '', fecha: '', usuario: '', contenido: '', tipo_log: '' };\n\n  constructor(public dialog: MatDialog, private logService: LogsService) { }\n\n  ngOnInit() {\n    this.getLogs();\n  }\n\n  async getLogs() {\n    const RESPONSE = await this.logService.getAllLogs().toPromise();\n    if (RESPONSE.ok) {\n      this.dataSource.data = RESPONSE.data as Log[];\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n\n      this.onChanges();\n    }\n  }\n\n  createFilter(): (log: Log, filter: string) => boolean {\n    const filterFunction = (log: Log, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return log.id_log.toString().indexOf(searchTerms.id_log) !== -1\n            && log.fecha.toLowerCase().indexOf(searchTerms.fecha.toLowerCase()) !== -1\n            && log.contenido.toLowerCase().indexOf(searchTerms.contenido.toLowerCase()) !== -1\n            && log.tipo_log.toLowerCase().indexOf(searchTerms.tipo_log.toLowerCase()) !== -1\n            && log.usuario != null ? log.usuario.toLowerCase().indexOf(searchTerms.usuario.toLowerCase()) !== -1 : false;\n    };\n    return filterFunction;\n}\n\nonChanges() {\n\n  combineLatest(\n    [this.idFilter.valueChanges.pipe(startWith('')),\n    this.fechaFilter.valueChanges.pipe(startWith('')),\n    this.usuarioFilter.valueChanges.pipe(startWith('')),\n    this.contenidoFilter.valueChanges.pipe(startWith('')),\n    this.tipoLogFilter.valueChanges.pipe(startWith(''))]\n  )\n    .subscribe(([\n      idLog,\n      fecha,\n      usuario,\n      contenido,\n      tipoLog\n    ]) => {\n      this.filterValues.id_log = idLog;\n      this.filterValues.fecha = fecha;\n      this.filterValues.usuario = usuario;\n      this.filterValues.contenido = contenido;\n      this.filterValues.tipo_log = tipoLog;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n  });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LogsRoutingModule } from './logs-routing.module';\nimport { LogsComponent } from './logs.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n@NgModule({\n  declarations: [LogsComponent],\n  imports: [\n    CommonModule,\n    LogsRoutingModule,\n    CrudMaterialModule\n  ]\n})\nexport class LogsModule { }\n"]}