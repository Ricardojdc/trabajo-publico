{"version":3,"sources":["webpack:///src/app/tipos-entidad/delete-tipo-entidad/delete-tipo-entidad.component.ts","webpack:///src/app/tipos-entidad/delete-tipo-entidad/delete-tipo-entidad.component.html","webpack:///src/app/tipos-entidad/tipos-entidad-routing.module.ts","webpack:///src/app/tipos-entidad/add-tipo-entidad/add-tipo-entidad.component.ts","webpack:///src/app/tipos-entidad/add-tipo-entidad/add-tipo-entidad.component.html","webpack:///src/app/tipos-entidad/edit-tipo-entidad/edit-tipo-entidad.component.ts","webpack:///src/app/tipos-entidad/edit-tipo-entidad/edit-tipo-entidad.component.html","webpack:///src/app/tipos-entidad/tipos-entidad.component.html","webpack:///src/app/tipos-entidad/tipos-entidad.component.ts","webpack:///src/app/tipos-entidad/tipos-entidad.module.ts"],"names":["DeleteTipoEntidadComponent","dialogRef","tipoEntidad","servicioTipoEntidad","snackBar","ENTIDAD","close","ok","deleteTipoEntidad","id_tipo_entidad","toPromise","RESPONSE","open","message","duration","data","confirmDelete","onNoClick","selector","templateUrl","styleUrls","routes","path","component","TiposEntidadRoutingModule","forChild","imports","exports","AddTipoEntidadComponent","servicioTiposEntidad","tipoEntidadForm","tipo_entidad","required","observaciones","valid","value","addTipoEntidad","confirmAdd","EditTipoEntidadComponent","editTipoEntidad","confirmEdit","TiposEntidadComponent","dialog","tiposEntidadService","overlay","dataSource","idTipoEntidadFilter","tipoEntidadFilter","filterValues","getTiposEntidad","getAllTiposEntidad","permises","displayedColumns","sort","paginator","filterPredicate","createFilter","onChanges","scrollStrategy","scrollStrategies","noop","afterClosed","RESULT","ngOnInit","filterFunction","filter","searchTerms","JSON","parse","toString","indexOf","toLowerCase","valueChanges","subscribe","stringify","TiposEntidadModule","declarations"],"mappings":"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","file":"tipos-entidad-tipos-entidad-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TipoEntidad } from 'src/app/shared/interfaces/tipo-entidad';\nimport { TiposEntidadService } from 'src/app/services/tipos-entidad.service';\nimport { CLOSE, ENTIDAD_TIPO_ENTIDAD } from '../../shared/messages';\n\n@Component({\n  selector: 'app-delete-tipo-entidad',\n  templateUrl: './delete-tipo-entidad.component.html',\n  styleUrls: ['./delete-tipo-entidad.component.scss']\n})\nexport class DeleteTipoEntidadComponent implements OnInit {\n\n  ENTIDAD: String;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteTipoEntidadComponent>,\n    @Inject(MAT_DIALOG_DATA) public tipoEntidad: TipoEntidad,\n    public servicioTipoEntidad: TiposEntidadService,\n    public snackBar: MatSnackBar,\n  ) \n  {   }\n\n  ngOnInit(): void {   \n    this.ENTIDAD = ENTIDAD_TIPO_ENTIDAD;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ ok: false });\n  }\n\n  async confirmDelete() {\n    const RESPONSE = await this.servicioTipoEntidad.deleteTipoEntidad(this.tipoEntidad.id_tipo_entidad).toPromise();\n    if (RESPONSE.ok) {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ ok: RESPONSE.ok, data: RESPONSE.data });\n    } else { this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 }); }\n  }\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>¿Seguro que deseas eliminar este {{ENTIDAD}}?</h3>\n    <div mat-dialog-content>\n        Id: {{tipoEntidad.id_tipo_entidad}}\n        <p></p>\n        {{ENTIDAD}}: {{tipoEntidad.tipo_entidad}}\n        <p></p>\n    </div>\n\n    <div mat-dialog-actions>\n        <button mat-button id=\"deleteTipoEntidad\" (click)=\"confirmDelete()\">Eliminar {{ENTIDAD}}</button>\n        <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TiposEntidadComponent } from './tipos-entidad.component';\n\nconst routes: Routes = [{ path: '', component: TiposEntidadComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TiposEntidadRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TipoEntidad } from 'src/app/shared/interfaces/tipo-entidad';\nimport { TiposEntidadService } from 'src/app/services/tipos-entidad.service';\nimport { CLOSE, INVALID_FORM, ENTIDAD_TIPO_ENTIDAD } from '../../shared/messages';\n\n@Component({\n  selector: 'app-add-tipo-entidad',\n  templateUrl: './add-tipo-entidad.component.html',\n  styleUrls: ['./add-tipo-entidad.component.scss']\n})\nexport class AddTipoEntidadComponent implements OnInit {\n  tipoEntidadForm: FormGroup;\n\n  ENTIDAD: String;\n\n  constructor(public dialogRef: MatDialogRef<AddTipoEntidadComponent>,\n    private snackBar: MatSnackBar,\n    private servicioTiposEntidad: TiposEntidadService\n  ){ }\n\n  ngOnInit(): void {\n    this.tipoEntidadForm = new FormGroup({\n      tipo_entidad: new FormControl(null, Validators.required),\n      observaciones: new FormControl(null)\n    });\n    this.ENTIDAD = ENTIDAD_TIPO_ENTIDAD;\n  }\n\n  async confirmAdd() {\n    if (this.tipoEntidadForm.valid) {\n      const tipo_entidad = this.tipoEntidadForm.value as TipoEntidad;\n\n      const RESPONSE = await this.servicioTiposEntidad.addTipoEntidad(tipo_entidad).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }  \n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Añadir {{ENTIDAD}}</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"tipoEntidadForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"{{ENTIDAD}}\" formControlName=\"tipo_entidad\" name=\"tipo_entidad\" maxlength=\"100\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\" name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\" [disabled]=\"!tipoEntidadForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TiposEntidadService } from 'src/app/services/tipos-entidad.service';\nimport { TipoEntidad } from 'src/app/shared/interfaces/tipo-entidad';\nimport { CLOSE, ENTIDAD_TIPO_ENTIDAD, ERROR } from '../../shared/messages';\n\n\n@Component({\n  selector: 'app-edit-tipo-entidad',\n  templateUrl: './edit-tipo-entidad.component.html',\n  styleUrls: ['./edit-tipo-entidad.component.scss']\n})\nexport class EditTipoEntidadComponent implements OnInit {\n\n  tipoEntidadForm: FormGroup;\n  ENTIDAD: String;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditTipoEntidadComponent>,\n    private snackBar: MatSnackBar,\n    private servicioTiposEntidad: TiposEntidadService,\n    @Inject(MAT_DIALOG_DATA) public tipoEntidad: TipoEntidad\n  ) { }\n\n  ngOnInit(): void {\n    this.ENTIDAD = ENTIDAD_TIPO_ENTIDAD;\n    this.tipoEntidadForm = new FormGroup({\n      id_tipo_entidad: new FormControl(this.tipoEntidad.id_tipo_entidad, Validators.required),\n      tipo_entidad: new FormControl(this.tipoEntidad.tipo_entidad, Validators.required),\n      observaciones: new FormControl(this.tipoEntidad.observaciones)\n    });\n  }\n\n  async confirmEdit(){\n    if (this.tipoEntidadForm.valid) {\n      const tipoEntidadForm = this.tipoEntidadForm.value;\n\n      const RESPONSE = await this.servicioTiposEntidad.editTipoEntidad(tipoEntidadForm).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ ok: RESPONSE.ok, data: RESPONSE.data });\n      } else { this.snackBar.open(ERROR, CLOSE, { duration: 5000 }); }\n    } else { this.snackBar.open(ERROR, CLOSE, { duration: 5000 }); }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ ok: false });\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Editar {{ENTIDAD}}</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"tipoEntidadForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"{{ENTIDAD}}\" formControlName=\"tipo_entidad\" name=\"tipo_entidad\" maxlength=\"100\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"Observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\"  [disabled]=\"!tipoEntidadForm.valid\" (click)=\"confirmEdit()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-table-container\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"id_tipo_entidad\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"idTipoEntidadFilter\" placeholder=\"Id\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let tiposEntidad\"> {{tiposEntidad.id_tipo_entidad}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"tipo_entidad\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"tipoEntidadFilter\" placeholder=\"Tipo Entidad\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let tiposEntidad\"> {{tiposEntidad.tipo_entidad}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <button mat-icon-button (click)=\"addTipoEntidad()\">\n                <mat-icon>\n                  add_circle\n                </mat-icon>\n              </button>\n                </th>\n                <td mat-cell *matCellDef=\"let tiposEntidad\">\n                    <button mat-icon-button (click)=\"editTipoEntidad(tiposEntidad)\">\n                <mat-icon>\n                  mode_edit\n                </mat-icon>\n              </button>\n                    <button mat-icon-button (click)=\"deleteTipoEntidad(tiposEntidad)\">\n                <mat-icon>\n                  delete\n                </mat-icon>\n              </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { FormControl } from '@angular/forms';\nimport { Permises } from '../shared/interfaces/api-response';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { TipoEntidad } from '../shared/interfaces/tipo-entidad';\nimport { TiposEntidadService } from '../services/tipos-entidad.service';\n\nimport { AddTipoEntidadComponent } from './add-tipo-entidad/add-tipo-entidad.component';\nimport { EditTipoEntidadComponent } from './edit-tipo-entidad/edit-tipo-entidad.component';\nimport { DeleteTipoEntidadComponent } from './delete-tipo-entidad/delete-tipo-entidad.component';\n\n@Component({\n  selector: 'app-tipos-entidad',\n  templateUrl: './tipos-entidad.component.html',\n  styleUrls: ['./tipos-entidad.component.scss']\n})\nexport class TiposEntidadComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: MatTableDataSource<TipoEntidad> = new MatTableDataSource();\n\n  idTipoEntidadFilter = new FormControl();\n  tipoEntidadFilter = new FormControl();\n\n  permises: Permises;\n\n  displayedColumns: string[];\n  private filterValues = { id_tipo_entidad: '', tipo_entidad: '' };\n\n  constructor(\n    public dialog: MatDialog,\n    private tiposEntidadService: TiposEntidadService,\n    private overlay: Overlay\n  ) { }\n\n  ngOnInit(): void {\n    this.getTiposEntidad();\n    //this.tiposEntidadService.ENTIDAD = \"test\";\n  }\n\n  \n  async getTiposEntidad() {\n    const RESPONSE = await this.tiposEntidadService.getAllTiposEntidad().toPromise();\n    this.permises = RESPONSE.permises;\n\n    if (RESPONSE.ok) {\n      this.tiposEntidadService.tipoEntidad = RESPONSE.data as TipoEntidad[];\n      this.displayedColumns = ['id_tipo_entidad', 'tipo_entidad', 'actions'];\n      this.dataSource.data = this.tiposEntidadService.tipoEntidad;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n      this.onChanges();\n    }  \n  }\n\n  async addTipoEntidad() {\n    const dialogRef = this.dialog.open(AddTipoEntidadComponent, { scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        //this.tiposEntidadService.tipoEntidad.push(RESULT.data);\n        //this.dataSource.data = this.tiposEntidadService.tipoEntidad;\n        this.ngOnInit();\n      }\n    }  \n  }\n\n  async editTipoEntidad(tipoEntidad: TipoEntidad) {\n    const dialogRef = this.dialog.open(EditTipoEntidadComponent, { data: tipoEntidad, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        //this.tiposEntidadService.editTipoEntidad(RESULT.data);\n        //this.dataSource.data = this.tiposEntidadService.tipoEntidad;\n        this.ngOnInit();\n      }\n    }  \n  }\n\n  async deleteTipoEntidad(tipoEntidad: TipoEntidad) {\n    const dialogRef = this.dialog.open(DeleteTipoEntidadComponent, { data: tipoEntidad, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        //this.tiposEntidadService.deleteTipoEntidad(RESULT.data);\n        //this.dataSource.data = this.tiposEntidadService.tipoEntidad;\n        this.ngOnInit();\n      }\n    }\n  }\n\n  createFilter(): (tipoEntidad: TipoEntidad, filter: string) => boolean {\n    const filterFunction = (tipoEntidad: TipoEntidad, filter: string): boolean => {\n      const searchTerms = JSON.parse(filter);\n\n      return tipoEntidad.id_tipo_entidad.toString().indexOf(searchTerms.id_tipo_entidad) !== -1\n        && tipoEntidad.tipo_entidad.toLowerCase().indexOf(searchTerms.tipo_entidad.toLowerCase()) !== -1;\n    };\n\n    return filterFunction;\n  }\n\n  onChanges() {\n      this.idTipoEntidadFilter.valueChanges\n      .subscribe(value => {\n          this.filterValues.id_tipo_entidad = value;\n          this.dataSource.filter = JSON.stringify(this.filterValues);\n      }); \n  \n      this.tipoEntidadFilter.valueChanges\n      .subscribe(value => {\n          this.filterValues.tipo_entidad = value;\n          this.dataSource.filter = JSON.stringify(this.filterValues);\n      }); \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TiposEntidadRoutingModule } from './tipos-entidad-routing.module';\nimport { TiposEntidadComponent } from './tipos-entidad.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\nimport { AddTipoEntidadComponent } from './add-tipo-entidad/add-tipo-entidad.component';\nimport { DeleteTipoEntidadComponent } from './delete-tipo-entidad/delete-tipo-entidad.component';\nimport { EditTipoEntidadComponent } from './edit-tipo-entidad/edit-tipo-entidad.component';\n\n\n@NgModule({\n  declarations: [TiposEntidadComponent, AddTipoEntidadComponent, DeleteTipoEntidadComponent, EditTipoEntidadComponent],\n  imports: [\n    CommonModule,\n    TiposEntidadRoutingModule,\n    CrudMaterialModule\n  ]\n})\nexport class TiposEntidadModule { }\n"]}