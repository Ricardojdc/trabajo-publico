{"version":3,"sources":["webpack:///src/app/roles-menu/roles-menu-routing.module.ts","webpack:///src/app/roles-menu/edit-rol-menu/edit-rol-menu.component.html","webpack:///src/app/roles-menu/edit-rol-menu/edit-rol-menu.component.ts","webpack:///src/app/roles-menu/delete-rol-menu/delete-rol-menu.component.ts","webpack:///src/app/roles-menu/delete-rol-menu/delete-rol-menu.component.html","webpack:///src/app/roles-menu/roles-menu.component.html","webpack:///src/app/roles-menu/roles-menu.component.ts","webpack:///src/app/services/rol-menu.service.ts","webpack:///src/app/roles-menu/roles-menu.module.ts","webpack:///src/app/roles-menu/add-rol-menu/add-rol-menu.component.html","webpack:///src/app/roles-menu/add-rol-menu/add-rol-menu.component.ts"],"names":["routes","path","component","RolesMenuRoutingModule","forChild","imports","exports","EditRolMenuComponent","dialogRef","snackBar","servicioGrupos","servicioOpciones","servicioRoles","servicioRolMenu","rolMenu","rolMenuForm","id_rol_menu","required","id_rol","id_grupo","id_grupo_menu","id_opcion","id_opcion_menu","add","permiso_post","edit","permiso_put","permiso_delete","observaciones","getRoles","getGrupos","getOpciones","getAllRoles","toPromise","REPSONSE","ok","roles","data","getAllGrupos","grupos","getAllOpciones","opciones","valid","value","editRolMenu","RESPONSE","open","message","duration","close","confirmAdd","onNoClick","selector","templateUrl","styleUrls","DeleteRolMenuComponent","deleteRolMenu","RolesMenuComponent","dialog","rolesMenuService","overlay","dataSource","rolFilter","grupoFilter","opcionFilter","filterValues","rol","grupo","opcion","getAllRolesMenu","permises","rolesMenu","displayedColumns","sort","paginator","filterPredicate","createFilter","onChanges","scrollStrategy","scrollStrategies","noop","afterClosed","RESULT","push","updateRolMenu","removeRolMenu","filterFunction","filter","searchTerms","JSON","parse","toLowerCase","indexOf","valueChanges","subscribe","stringify","ENDPOINT","RolMenuService","http","commonService","get","headers","body","post","put","idRolMenu","Number","index","rolMenuFilter","indexFilter","providedIn","RolesMenuModule","declarations","entryComponents","AddRolMenuComponent","idRol","idRolSuperadmin","controls","setValue","addRolMenu","selectRol"],"mappings":"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","file":"roles-menu-roles-menu-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RolesMenuComponent } from './roles-menu.component';\n\nconst routes: Routes = [{ path: '', component: RolesMenuComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesMenuRoutingModule { }\n","<div class=\"container\">\n    <h3 mat-dialog-title>Editar rol de menú</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"rolMenuForm\">\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_rol\" placeholder=\"Rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{ rol.rol }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_opcion\" placeholder=\"Opcion\">\n                    <mat-option *ngFor=\"let opcion of opciones\" [value]=\"opcion.id_opcion_menu\">\n                        {{ opcion.opcion }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_grupo\" placeholder=\"Grupo\">\n                    <mat-option *ngFor=\"let grupo of grupos\" [value]=\"grupo.id_grupo_menu\">\n                        {{ grupo.grupo }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-checkbox formControlName=\"add\">\n                    Añadir\n            </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"edit\">\n                    Editar\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"delete\">\n                    Borrar\n                </mat-checkbox>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\" [disabled]=\"!rolMenuForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GruposService } from 'src/app/services/grupos.service';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { RolMenu } from 'src/app/shared/interfaces/rol-menu';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { Grupo } from 'src/app/shared/interfaces/grupo';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-edit-rol-menu',\n  templateUrl: './edit-rol-menu.component.html',\n  styleUrls: ['./edit-rol-menu.component.scss']\n})\nexport class EditRolMenuComponent implements OnInit {\n\n  rolMenuForm: FormGroup;\n  roles: Rol[];\n  grupos: Grupo[];\n  opciones: Opcion[];\n\n  constructor(public dialogRef: MatDialogRef<EditRolMenuComponent>,\n              private snackBar: MatSnackBar,\n              private servicioGrupos: GruposService,\n              private servicioOpciones: OpcionesService,\n              private servicioRoles: RolesService,\n              private servicioRolMenu: RolMenuService,\n              @Inject(MAT_DIALOG_DATA) public rolMenu: RolMenu\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.rolMenuForm = new FormGroup({\n      id_rol_menu: new FormControl(this.rolMenu.id_rol_menu, [Validators.required]),\n      id_rol: new FormControl(this.rolMenu.id_rol, [Validators.required]),\n      id_grupo: new FormControl(this.rolMenu.id_grupo_menu, [Validators.required]),\n      id_opcion: new FormControl(this.rolMenu.id_opcion_menu, [Validators.required]),\n      add: new FormControl(this.rolMenu.permiso_post === '1', [Validators.required]),\n      edit: new FormControl(this.rolMenu.permiso_put === '1', [Validators.required]),\n      delete: new FormControl(this.rolMenu.permiso_delete === '1', [Validators.required]),\n      observaciones: new FormControl(this.rolMenu.observaciones)\n    });\n    this.getRoles();\n    this.getGrupos();\n    this.getOpciones();\n  }\n\n  async getRoles() {\n    const REPSONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (REPSONSE.ok) {\n      this.roles = REPSONSE.data as Rol[];\n    }\n  }\n\n  async getGrupos() {\n    const REPSONSE = await this.servicioGrupos.getAllGrupos().toPromise();\n    if (REPSONSE.ok) {\n      this.grupos = REPSONSE.data as Grupo[];\n    }\n  }\n\n  async getOpciones() {\n    const REPSONSE = await this.servicioOpciones.getAllOpciones().toPromise();\n    if (REPSONSE.ok) {\n      this.opciones = REPSONSE.data as Opcion[];\n    }\n  }\n\n  async confirmAdd() {\n    if (this.rolMenuForm.valid) {\n      const rolMenu = this.rolMenuForm.value;\n      const RESPONSE = await this.servicioRolMenu.editRolMenu(rolMenu).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RolMenu } from 'src/app/shared/interfaces/rol-menu';\nimport { CLOSE } from '../../shared/messages';\n\n@Component({\n  selector: 'app-delete-rol-menu',\n  templateUrl: './delete-rol-menu.component.html',\n  styleUrls: ['./delete-rol-menu.component.scss']\n})\nexport class DeleteRolMenuComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteRolMenuComponent>,\n              private servicioRolMenu: RolMenuService,\n              @Inject(MAT_DIALOG_DATA) public rolMenu: RolMenu,\n              private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {}\n\n  async deleteRolMenu() {\n    const RESPONSE = await this.servicioRolMenu.deleteRolMenu(this.rolMenu.id_rol_menu).toPromise();\n    if (RESPONSE.ok) {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n    } else {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Borrar rol de menú</h3>\n\n    <p>Datos del registro: </p>\n    <ul>\n        <li>Rol: {{ rolMenu.rol }}</li>\n        <li>Grupo: {{ rolMenu.grupo }}</li>\n        <li>Opción: {{ rolMenu.opcion }}</li>\n        <li>Observaciones: {{ rolMenu.observaciones }}</li>\n    </ul>\n    <div mat-dialog-actions>\n        <button mat-button id=\"deleteRolMenu\" type=\"submit\" (click)=\"deleteRolMenu()\">Eliminar</button>\n        <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n    </div>\n</div>","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-table-container\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"rol\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"rolFilter\" placeholder=\"Rol\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.rol}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"grupo\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"grupoFilter\" placeholder=\"Grupo\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.grupo}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"opcion\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"opcionFilter\" placeholder=\"Opcion\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.opcion}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> \n                    <button mat-icon-button *ngIf=\"permises.add\" (click)=\"addRolMenu()\">\n                        <mat-icon>\n                            add_circle\n                        </mat-icon>\n                    </button></th>\n                <td mat-cell *matCellDef=\"let rolMenu\">\n                    <button mat-icon-button *ngIf=\"permises.edit\" (click)=\"editRolMenu(rolMenu)\">\n                        <mat-icon>\n                            mode_edit\n                        </mat-icon>\n                    </button>\n                    <button mat-icon-button *ngIf=\"permises.delete\" (click)=\"deleteRolMenu(rolMenu)\">\n                        <mat-icon>\n                            delete\n                        </mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>\n<!-- <router-outlet></router-outlet> -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RolMenuService } from '../services/rol-menu.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddRolMenuComponent } from './add-rol-menu/add-rol-menu.component';\nimport { EditRolMenuComponent } from './edit-rol-menu/edit-rol-menu.component';\nimport { DeleteRolMenuComponent } from './delete-rol-menu/delete-rol-menu.component';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { RolMenu } from '../shared/interfaces/rol-menu';\nimport { Permises } from '../shared/interfaces/api-response';\n\n@Component({\n  selector: 'app-roles-menu',\n  templateUrl: './roles-menu.component.html',\n  styleUrls: ['./roles-menu.component.scss']\n})\nexport class RolesMenuComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  rolesMenu: RolMenu;\n  dataSource: MatTableDataSource<RolMenu> = new MatTableDataSource();\n\n  rolFilter = new FormControl();\n  grupoFilter = new FormControl();\n  opcionFilter = new FormControl();\n\n  permises: Permises;\n\n  displayedColumns: string[];\n  private filterValues = { rol: '', grupo: '', opcion: '' };\n\n  constructor(\n              public dialog: MatDialog,\n              private rolesMenuService: RolMenuService,\n              private overlay: Overlay\n              ) { }\n\n  ngOnInit() {\n    this.getRoles();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.rolesMenuService.getAllRolesMenu().toPromise();\n    this.permises = RESPONSE.permises;\n    if (RESPONSE.ok) {\n      this.rolesMenuService.rolesMenu = RESPONSE.data as RolMenu[];\n      this.displayedColumns = ['rol', 'grupo', 'opcion', 'actions'];\n      this.dataSource.data = this.rolesMenuService.rolesMenu;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n\n      this.onChanges();\n    }\n  }\n\n  async addRolMenu() {\n    const dialogRef = this.dialog.open(AddRolMenuComponent, { scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.rolesMenu.push(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  async editRolMenu(rolMenu: RolMenu) {\n    const dialogRef = this.dialog.open(EditRolMenuComponent, { data: rolMenu, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.updateRolMenu(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  async deleteRolMenu(rolMenu: RolMenu) {\n    const dialogRef = this.dialog.open(DeleteRolMenuComponent, { data: rolMenu, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.removeRolMenu(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  createFilter(): (rol: RolMenu, filter: string) => boolean {\n    const filterFunction = (rol: RolMenu, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return rol.rol.toLowerCase().indexOf(searchTerms.rol.toLowerCase()) !== -1\n            && rol.grupo.toLowerCase().indexOf(searchTerms.grupo.toLowerCase()) !== -1\n            && rol.opcion.toLowerCase().indexOf(searchTerms.opcion.toLowerCase()) !== -1;\n    };\n\n    return filterFunction;\n  }\n\n  onChanges() {\n    this.rolFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.rol = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.grupoFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.grupo = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    }); \n\n    this.opcionFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.opcion = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    }); \n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { URL_API } from 'src/environments/environment';\nimport { CommonService } from '../shared/common.service';\nimport { RolMenu } from '../shared/interfaces/rol-menu';\nimport { ApiResponse } from '../shared/interfaces/api-response';\n\nconst ENDPOINT = 'rol_menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolMenuService {\n\n  rolesMenu: RolMenu[];\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  }\n\n  getAllRolesMenu() {\n    return this.http.get<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers });\n  }\n\n  addRolMenu(rolMenu: RolMenu) {\n    const body = JSON.stringify(rolMenu);\n    return this.http.post<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n\n  editRolMenu(rolMenu: RolMenu) {\n    const body = JSON.stringify(rolMenu);\n    return this.http.put<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n  deleteRolMenu(idRolMenu: string | number) {\n    return this.http.delete<ApiResponse>(`${URL_API}/${ENDPOINT}.php?id=${idRolMenu}`, { headers: this.commonService.headers });\n  }\n\n  removeRolMenu(idRolMenu) {\n    this.rolesMenu = this.rolesMenu.filter(rolMenu => {\n      return Number(rolMenu.id_rol_menu) !== Number(idRolMenu);\n    });\n  }\n\n  updateRolMenu(rolMenu: RolMenu) {\n    let index = null;\n    this.rolesMenu.filter((rolMenuFilter, indexFilter) => {\n      if (rolMenu.id_rol_menu === rolMenuFilter.id_rol_menu) {\n        index = indexFilter;\n      }\n    });\n\n    if (index) {\n      this.rolesMenu[index] = rolMenu;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RolesMenuRoutingModule } from './roles-menu-routing.module';\nimport { RolesMenuComponent } from './roles-menu.component';\nimport { AddRolMenuComponent } from './add-rol-menu/add-rol-menu.component';\nimport { EditRolMenuComponent } from './edit-rol-menu/edit-rol-menu.component';\nimport { DeleteRolMenuComponent } from './delete-rol-menu/delete-rol-menu.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n\n@NgModule({\n  declarations: [\n    RolesMenuComponent, \n    AddRolMenuComponent, \n    EditRolMenuComponent, \n    DeleteRolMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    RolesMenuRoutingModule,\n    CrudMaterialModule\n  ], entryComponents: [\n    AddRolMenuComponent, \n    EditRolMenuComponent, \n    DeleteRolMenuComponent\n  ]\n})\nexport class RolesMenuModule { }\n","<div class=\"container\">\n    <h3 mat-dialog-title>Añadir rol de menú</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"rolMenuForm\">\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_rol\" (selectionChange)=\"selectRol($event.value)\" placeholder=\"Rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{ rol.rol }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_opcion\" placeholder=\"Opcion\">\n                    <mat-option *ngFor=\"let opcion of opciones\" [value]=\"opcion.id_opcion_menu\">\n                        {{ opcion.opcion }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_grupo\" placeholder=\"Grupo\">\n                    <mat-option *ngFor=\"let grupo of grupos\" [value]=\"grupo.id_grupo_menu\">\n                        {{ grupo.grupo }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"add\">\n                    Añadir\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"edit\">\n                    Editar\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"delete\">\n                    Borrar\n                </mat-checkbox>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\" [disabled]=\"!rolMenuForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GruposService } from 'src/app/services/grupos.service';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { Grupo } from 'src/app/shared/interfaces/grupo';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-add-rol-menu',\n  templateUrl: './add-rol-menu.component.html',\n  styleUrls: ['./add-rol-menu.component.scss']\n})\nexport class AddRolMenuComponent implements OnInit {\n\n  rolMenuForm: FormGroup;\n  roles: Rol[];\n  grupos: Grupo[];\n  opciones: Opcion[];\n\n  permises = {\n    add: false,\n    edit: false,\n    delete: false,\n  };\n\n  constructor(public dialogRef: MatDialogRef<AddRolMenuComponent>,\n              private snackBar: MatSnackBar,\n              private servicioGrupos: GruposService,\n              private servicioOpciones: OpcionesService,\n              private servicioRoles: RolesService,\n              private servicioRolMenu: RolMenuService\n    ) {\n\n  }\n\n  ngOnInit() {\n    this.rolMenuForm = new FormGroup({\n      id_rol: new FormControl(null, [Validators.required]),\n      id_grupo: new FormControl(null, [Validators.required]),\n      id_opcion: new FormControl(null, [Validators.required]),\n      add: new FormControl(this.permises.add, [Validators.required]),\n      edit: new FormControl(this.permises.edit, [Validators.required]),\n      delete: new FormControl(this.permises.delete, [Validators.required]),\n      observaciones: new FormControl(null)\n    });\n    this.getRoles();\n    this.getGrupos();\n    this.getOpciones();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE.ok) {\n      this.roles = RESPONSE.data as Rol[];\n    }\n  }\n\n  async getGrupos() {\n    const RESPONSE = await this.servicioGrupos.getAllGrupos().toPromise();\n    if (RESPONSE.ok) {\n      this.grupos = RESPONSE.data as Grupo[];\n    }\n  }\n\n  async getOpciones() {\n    const RESPONSE = await this.servicioOpciones.getAllOpciones().toPromise();\n    if (RESPONSE.ok) {\n      this.opciones = RESPONSE.data as Opcion[];\n    }\n  }\n\n  selectRol(idRol: string) {\n    const idRolSuperadmin = this.roles.filter(rol => {\n      return rol.rol === 'Superadmin';\n    })[0].id_rol;\n\n    if (Number(idRol) === Number(idRolSuperadmin)) {\n      this.permises.add = this.rolMenuForm.controls.add.value;\n      this.permises.edit = this.rolMenuForm.controls.edit.value;\n      this.permises.delete = this.rolMenuForm.controls.delete.value;\n\n      this.rolMenuForm.controls.add.setValue(true);\n      this.rolMenuForm.controls.edit.setValue(true);\n      this.rolMenuForm.controls.delete.setValue(true);\n    } else {\n      this.rolMenuForm.controls.add.setValue(this.permises.add);\n      this.rolMenuForm.controls.edit.setValue(this.permises.edit);\n      this.rolMenuForm.controls.delete.setValue(this.permises.delete);\n    }\n  }\n\n  async confirmAdd() {\n    if (this.rolMenuForm.valid) {\n      const rolMenu = this.rolMenuForm.value;\n      const RESPONSE = await this.servicioRolMenu.addRolMenu(rolMenu).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n"]}