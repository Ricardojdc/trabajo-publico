{"version":3,"sources":["webpack:///src/app/usuarios/usuarios.module.ts","webpack:///src/app/usuarios/usuarios.component.html","webpack:///src/app/usuarios/usuarios.component.ts","webpack:///src/app/usuarios/usuarios-routing.module.ts","webpack:///src/app/usuarios/add-usuario/add-usuario.component.html","webpack:///src/app/usuarios/add-usuario/add-usuario.component.ts","webpack:///src/app/usuarios/delete-usuario/delete-usuario.component.ts","webpack:///src/app/usuarios/delete-usuario/delete-usuario.component.html","webpack:///src/app/usuarios/edit-usuario/edit-usuario.component.html","webpack:///src/app/usuarios/edit-usuario/edit-usuario.component.ts"],"names":["UsuariosModule","declarations","imports","entryComponents","UsuariosComponent","dialog","servicioUsuarios","overlay","dataSource","idFilter","usuarioFilter","nombreFilter","rolFilter","displayTable","filterValues","id_usuario","usuario","nombre_publico","rol","habilitado","getUsuarios","getAllUsuarios","toPromise","RESPONSE","permises","ok","displayedColumns","usuarios","data","sort","paginator","filterPredicate","createFilter","onChanges","dialogRef","open","width","scrollStrategy","scrollStrategies","noop","afterClosed","RESP","push","updateUsuario","removeUsuario","filterFunction","filter","searchTerms","JSON","parse","toString","indexOf","toLowerCase","valueChanges","subscribe","value","stringify","event","Number","selector","templateUrl","styleUrls","routes","path","component","UsuariosRoutingModule","forChild","exports","AddUsuarioComponent","servicioRoles","servicioUsuario","snackBar","usuarioForm","required","email","password","id_rol","observaciones","getRoles","getAllRoles","roles","valid","addUsuario","message","duration","close","confirmAdd","onNoClick","DeleteUsuarioComponent","deleteUsuario","deleteUser","EditUsuarioComponent","editUsuario"],"mappings":"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","file":"usuarios-usuarios-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\nimport { UsuariosComponent } from './usuarios.component';\nimport { AddUsuarioComponent } from './add-usuario/add-usuario.component';\nimport { EditUsuarioComponent } from './edit-usuario/edit-usuario.component';\nimport { DeleteUsuarioComponent } from './delete-usuario/delete-usuario.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n@NgModule({\n  declarations: [\n    UsuariosComponent,\n    AddUsuarioComponent,\n    EditUsuarioComponent,\n    DeleteUsuarioComponent\n  ],\n  imports: [\n    CommonModule,\n    UsuariosRoutingModule,\n    CrudMaterialModule\n  ], entryComponents: [\n    AddUsuarioComponent,\n    EditUsuarioComponent,\n    DeleteUsuarioComponent\n  ]\n})\nexport class UsuariosModule { }\n","<div class=\"example-container mat-elevation-z8\" >\n    <div class=\"example-table-container\">\n        <table mat-table id=\"table\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"id_usuario\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"idFilter\" placeholder=\"Id\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\"> {{usuario.id_usuario}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"usuario\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"usuarioFilter\" placeholder=\"Usuario\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\"> {{usuario.usuario}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nombre_publico\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"nombreFilter\" placeholder=\"Nombre\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\"> {{usuario.nombre_publico}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"rol\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"rolFilter\" placeholder=\"Rol\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\"> {{usuario.rol}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"habilitado\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select placeholder=\"Habilitado\" (selectionChange)=\"buscarHabilitados($event)\">\n                            <mat-option value=\"todos\">\n                                Todos\n                            </mat-option>\n                            <mat-option value=1>\n                                Si\n                            </mat-option>\n                            <mat-option value=0>\n                                No\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\"> {{usuario.habilitado == '1' ? 'Sí' : 'No'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <button id=\"addUsuario\" mat-icon-button *ngIf=\"permises.add\" (click)=\"addUsuario()\">\n                        <mat-icon>\n                            add_circle\n                        </mat-icon>\n                    </button>\n                </th>\n                <td mat-cell *matCellDef=\"let usuario\">\n                    <button id=\"editUsuario\" mat-icon-button *ngIf=\"permises.edit\" (click)=\"editUsuario(usuario)\">\n                        <mat-icon>\n                            mode_edit\n                        </mat-icon>\n                    </button>\n                    <button id=\"deleteUsuario\" mat-icon-button *ngIf=\"permises.delete\" (click)=\"deleteUsuario(usuario)\">\n                        <mat-icon>\n                            delete\n                        </mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { UsuarioService } from '../services/usuario.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddUsuarioComponent } from './add-usuario/add-usuario.component';\nimport { EditUsuarioComponent } from './edit-usuario/edit-usuario.component';\nimport { DeleteUsuarioComponent } from './delete-usuario/delete-usuario.component';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Usuario } from '../shared/interfaces/usuario';\nimport { Permises } from '../shared/interfaces/api-response';\n// import { fadeOut, blub} from '../animations/animation';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss'],\n  // animations: [fadeOut, blub],\n})\nexport class UsuariosComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Usuario> = new MatTableDataSource();\n  permises: Permises;\n\n\n  idFilter = new FormControl();\n  usuarioFilter = new FormControl();\n  nombreFilter = new FormControl();\n  rolFilter = new FormControl();\n\n  displayTable = false;\n\n  displayedColumns: string[];\n  private filterValues = { id_usuario: '', usuario: '', nombre_publico: '', rol: '', habilitado: 0 };\n\n\n  constructor(\n              public dialog: MatDialog,\n              private servicioUsuarios: UsuarioService,\n              private overlay: Overlay\n              ) { }\n\n  ngOnInit() {\n    this.getUsuarios();\n  }\n\n  async getUsuarios() {\n    const RESPONSE = await this.servicioUsuarios.getAllUsuarios().toPromise();\n    this.permises = RESPONSE.permises;\n    if (RESPONSE.ok) {\n      this.displayedColumns = ['id_usuario', 'usuario', 'nombre_publico', 'rol', 'habilitado', 'actions'];\n      this.servicioUsuarios.usuarios = RESPONSE.data as Usuario[];\n      this.dataSource.data = this.servicioUsuarios.usuarios;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n      this.onChanges();\n    }\n  }\n\n  async addUsuario() {\n    const dialogRef = this.dialog.open(AddUsuarioComponent, { width: '500px', scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.servicioUsuarios.usuarios.push(RESP.data);\n        this.dataSource.data = this.servicioUsuarios.usuarios;\n      }\n    }\n  }\n\n  async editUsuario(usuario: Usuario) {\n    const dialogRef = this.dialog.open(EditUsuarioComponent, {\n      data: usuario,\n      width: '500px',\n      scrollStrategy: this.overlay.scrollStrategies.noop()\n    });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.servicioUsuarios.updateUsuario(RESP.data);\n        this.dataSource.data = this.servicioUsuarios.usuarios;\n      }\n    }\n  }\n\n  async deleteUsuario(usuario: Usuario) {\n    const dialogRef = this.dialog.open(DeleteUsuarioComponent, { data: usuario, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.servicioUsuarios.removeUsuario(RESP.data);\n        this.dataSource.data = this.servicioUsuarios.usuarios;\n      }\n    }\n  }\n\n  createFilter(): (usuario: any, filter: string) => boolean {\n    const filterFunction = (usuario: any, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return usuario.id_usuario.toString().indexOf(searchTerms.id_usuario.toLowerCase()) !== -1\n            && usuario.usuario.toLowerCase().indexOf(searchTerms.usuario.toLowerCase()) !== -1\n            && usuario.nombre_publico.toLowerCase().indexOf(searchTerms.nombre_publico.toLowerCase()) !== -1\n            && usuario.rol.toLowerCase().indexOf(searchTerms.rol.toLowerCase()) !== -1\n            && searchTerms.habilitado === 'todos' ? usuario.habilitado : usuario.habilitado.indexOf(searchTerms.habilitado) !== -1;\n    };\n\n    return filterFunction;\n  }\n\n  onChanges(): void {\n    this.idFilter.valueChanges\n        .subscribe(value => {\n            this.filterValues.id_usuario = value;\n            this.dataSource.filter = JSON.stringify(this.filterValues);\n        });\n\n    this.usuarioFilter.valueChanges\n        .subscribe(value => {\n            this.filterValues.usuario = value;\n            this.dataSource.filter = JSON.stringify(this.filterValues);\n        });\n\n    this.nombreFilter.valueChanges\n        .subscribe(value => {\n            this.filterValues.nombre_publico = value;\n            this.dataSource.filter = JSON.stringify(this.filterValues);\n        });\n\n    this.rolFilter.valueChanges\n      .subscribe(value => {\n          this.filterValues.rol = value;\n          this.dataSource.filter = JSON.stringify(this.filterValues);\n      });\n\n    }\n\n    buscarHabilitados(event) {\n\n      let value: number;\n\n      event.value === 'todos' ? value = event.value : value = Number(event.value);\n      this.filterValues.habilitado = value;\n      // console.log(value);\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n      // this.dataSource.data = this.dataSource.filteredData.filter(filas=> filas.habilitado == event.value)\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsuariosComponent } from './usuarios.component';\n\nconst routes: Routes = [{ path: '', component: UsuariosComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuariosRoutingModule { }\n","<div class=\"container\">\n    <h3 mat-dialog-title>Añadir usuario</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"usuarioForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Correo electrónico\" formControlName=\"usuario\" name=\"usuario\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Nombre Público\" formControlName=\"nombre_publico\" name=\"nombre_publico\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput type=\"password\" placeholder=\"Contraseña\" formControlName=\"password\" name=\"password\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-label>Rol</mat-label>\n                <mat-select formControlName=\"id_rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{rol.rol}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button id=\"onSubmit\" mat-button type=\"submit\"  [disabled]=\"!usuarioForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button id=\"onNoClick\" mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-add-usuario',\n  templateUrl: './add-usuario.component.html',\n  styleUrls: ['./add-usuario.component.scss']\n})\nexport class AddUsuarioComponent implements OnInit {\n  usuarioForm: FormGroup;\n  roles: Rol[];\n\n  constructor(public dialogRef: MatDialogRef<AddUsuarioComponent>,\n              private servicioRoles: RolesService,\n              private servicioUsuario: UsuarioService,\n              public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.usuarioForm = new FormGroup({\n      usuario: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required]),\n      id_rol: new FormControl(null, [Validators.required]),\n      nombre_publico: new FormControl(null),\n      observaciones: new FormControl(null)\n    });\n\n    this.getRoles();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE.ok) {\n      this.roles = RESPONSE.data as Rol[];\n    }\n  }\n\n  async confirmAdd() {\n    // console.log(this.usuarioForm.value);\n    if (this.usuarioForm.valid) {\n      const usuario = this.usuarioForm.value;\n\n      const RESP = await this.servicioUsuario.addUsuario(usuario).toPromise();\n      if (RESP.ok) {\n        this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESP.ok, data: RESP.data});\n      } else {\n        this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ok: false});\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Usuario } from 'src/app/shared/interfaces/usuario';\nimport { CLOSE } from '../../shared/messages';\n\n@Component({\n  selector: 'app-delete-usuario',\n  templateUrl: './delete-usuario.component.html',\n  styleUrls: ['./delete-usuario.component.scss']\n})\nexport class DeleteUsuarioComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteUsuarioComponent>,\n              @Inject(MAT_DIALOG_DATA) public usuario: Usuario,\n              private servicioUsuario: UsuarioService,\n              private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async deleteUser() {\n    const RESP = await this.servicioUsuario.deleteUsuario(this.usuario).toPromise();\n    if (RESP.ok) {\n      this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ok: RESP.ok, data: RESP.data});\n    } else {\n      this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Borrar usuario</h3>\n\n    <p><strong>¡Atención! Se eliminará el usuario:</strong> {{usuario.usuario}} </p>\n\n    <p> Esto sirve para eliminar usuarios creados por error, en otro caso es recomendable deshabilitar el usuario desde el panel de editar.</p>\n\n    <div mat-dialog-actions>\n        <button id=\"deleteUser\" mat-button type=\"submit\" (click)=\"deleteUser()\">Eliminar</button>\n        <button id=\"onNoClick\" mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n    </div>\n</div>","<div class=\"container\">\n    <h3 mat-dialog-title>Editar usuario</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"usuarioForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Correo electrónico\" formControlName=\"usuario\" name=\"usuario\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Nombre público\" formControlName=\"nombre_publico\" name=\"nombre_publico\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput type=\"password\" placeholder=\"Cambiar contraseña\" formControlName=\"password\" name=\"password\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-label>Rol</mat-label>\n                <mat-select formControlName=\"id_rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{rol.rol}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form habilitado\">\n            <mat-checkbox formControlName=\"habilitado\">Usuario habilitado</mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\"  [disabled]=\"!usuarioForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Usuario } from 'src/app/shared/interfaces/usuario';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport {CLOSE, INVALID_FORM} from '../../shared/messages';\n\n@Component({\n  selector: 'app-edit-usuario',\n  templateUrl: './edit-usuario.component.html',\n  styleUrls: ['./edit-usuario.component.scss']\n})\nexport class EditUsuarioComponent implements OnInit {\n\n  usuarioForm: FormGroup;\n  roles: Rol[];\n\n  constructor(public dialogRef: MatDialogRef<EditUsuarioComponent>,\n              private servicioRoles: RolesService,\n              private servicioUsuario: UsuarioService,\n              public snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) public usuario: Usuario\n  ) { }\n\n  ngOnInit() {\n\n    this.usuarioForm = new FormGroup({\n      id_usuario: new FormControl(this.usuario.id_usuario, [Validators.required]),\n      usuario: new FormControl(this.usuario.usuario, [Validators.required, Validators.email]),\n      nombre_publico: new FormControl(this.usuario.nombre_publico),\n      password: new FormControl(''),\n      habilitado: new FormControl(Number(this.usuario.habilitado) === 1, [Validators.required]),\n      id_rol: new FormControl(this.usuario.id_rol, [Validators.required]),\n      observaciones: new FormControl(this.usuario.observaciones)\n    });\n\n    this.getRoles();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE.ok) {\n      this.roles = RESPONSE.data as Rol[];\n    }\n  }\n\n  async confirmAdd() {\n    if (this.usuarioForm.valid) {\n      const usuario = this.usuarioForm.value;\n\n      const RESP = await this.servicioUsuario.editUsuario(usuario).toPromise();\n      if (RESP.ok) {\n        this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESP.ok, data: RESP.data});\n      } else {\n        this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ok: false});\n  }\n\n}\n"]}