{"version":3,"sources":["webpack:///src/app/opciones/opciones.module.ts","webpack:///src/app/opciones/edit-opcion/edit-opcion.component.ts","webpack:///src/app/opciones/edit-opcion/edit-opcion.component.html","webpack:///src/app/opciones/add-opcion/add-opcion.component.ts","webpack:///src/app/opciones/add-opcion/add-opcion.component.html","webpack:///src/app/opciones/delete-opcion/delete-opcion.component.ts","webpack:///src/app/opciones/delete-opcion/delete-opcion.component.html","webpack:///src/app/opciones/opciones-routing.module.ts","webpack:///src/app/opciones/opciones.component.html","webpack:///src/app/opciones/opciones.component.ts"],"names":["OpcionesModule","declarations","imports","entryComponents","EditOpcionComponent","dialogRef","snackBar","servicioOpciones","opcion","opcionForm","id_opcion_menu","required","accion","texto_tooltip","observaciones","valid","value","editOpcion","toPromise","RESPONSE","ok","open","message","duration","close","data","confirmAdd","onNoClick","selector","templateUrl","styleUrls","AddOpcionComponent","addOpcion","DeleteOpcionComponent","deleteOpcion","confirmDelete","routes","path","component","OpcionesRoutingModule","forChild","exports","OpcionesComponent","dialog","opcionesService","overlay","dataSource","idFilter","opcionFilter","filterValues","getOpciones","getAllOpciones","permises","opciones","displayedColumns","sort","paginator","filterPredicate","createFilter","onChanges","scrollStrategy","scrollStrategies","noop","afterClosed","RESULT","push","updateOpcion","removeOpcion","filterFunction","filter","searchTerms","JSON","parse","toString","indexOf","toLowerCase","valueChanges","subscribe","stringify"],"mappings":"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","file":"opciones-opciones-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OpcionesRoutingModule } from './opciones-routing.module';\nimport { OpcionesComponent } from './opciones.component';\nimport { AddOpcionComponent } from './add-opcion/add-opcion.component';\nimport { EditOpcionComponent } from './edit-opcion/edit-opcion.component';\nimport { DeleteOpcionComponent } from './delete-opcion/delete-opcion.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n\n@NgModule({\n  declarations: [\n    OpcionesComponent, \n    AddOpcionComponent, \n    EditOpcionComponent, \n    DeleteOpcionComponent\n  ],\n  imports: [\n    CommonModule,\n    OpcionesRoutingModule,\n    CrudMaterialModule,\n  ], entryComponents: [\n    AddOpcionComponent, \n    EditOpcionComponent, \n    DeleteOpcionComponent\n  ]\n})\nexport class OpcionesModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n// import { Opcion } from 'src/app/shared/interfaces/opcion';\n\n@Component({\n  selector: 'app-edit-opcion',\n  templateUrl: './edit-opcion.component.html',\n  styleUrls: ['./edit-opcion.component.scss']\n})\nexport class EditOpcionComponent implements OnInit {\n\n  opcionForm: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<EditOpcionComponent>,\n              private snackBar: MatSnackBar,\n              private servicioOpciones: OpcionesService,\n              @Inject(MAT_DIALOG_DATA) public opcion: Opcion\n    ) {\n\n  }\n\n  ngOnInit() {\n    this.opcionForm = new FormGroup({\n      id_opcion_menu: new FormControl(this.opcion.id_opcion_menu, Validators.required),\n      opcion: new FormControl(this.opcion.opcion, Validators.required),\n      accion: new FormControl(this.opcion.accion, Validators.required),\n      texto_tooltip: new FormControl(this.opcion.texto_tooltip),\n      observaciones: new FormControl(this.opcion.observaciones)\n    });\n  }\n\n  async confirmAdd() {\n    if (this.opcionForm.valid) {\n      const opcion = this.opcionForm.value;\n\n      const RESPONSE = await this.servicioOpciones.editOpcion(opcion).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Editar opción</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"opcionForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Opción\" formControlName=\"opcion\" name=\"opcion\" maxlength=\"100\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Acción\" formControlName=\"accion\" name=\"accion\" maxlength=\"100\"\n                    required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Tooltip menú\" formControlName=\"texto_tooltip\" name=\"texto_tooltip\" maxlength=\"255\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\"  [disabled]=\"!opcionForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>\n","// import {URL_API} from '../../../environments/environment';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-add-opcion',\n  templateUrl: './add-opcion.component.html',\n  styleUrls: ['./add-opcion.component.scss']\n})\nexport class AddOpcionComponent implements OnInit {\n  opcionForm: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<AddOpcionComponent>,\n              private snackBar: MatSnackBar,\n              private servicioOpciones: OpcionesService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.opcionForm = new FormGroup({\n      opcion: new FormControl(null, Validators.required),\n      accion: new FormControl(null, Validators.required),\n      texto_tooltip: new FormControl(null),\n      observaciones: new FormControl(null)\n    });\n  }\n\n  async confirmAdd() {\n    if (this.opcionForm.valid) {\n      const opcion = this.opcionForm.value as Opcion;\n\n      const RESPONSE = await this.servicioOpciones.addOpcion(opcion).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Añadir opción</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"opcionForm\">\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Opción\" formControlName=\"opcion\" name=\"opcion\" maxlength=\"100\" required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Acción\" formControlName=\"accion\" name=\"accion\" maxlength=\"100\"\n                    required>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <input matInput placeholder=\"Tooltip menú\" formControlName=\"texto_tooltip\" name=\"texto_tooltip\" maxlength=\"255\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\"  [disabled]=\"!opcionForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { CLOSE } from '../../shared/messages';\n\n@Component({\n  selector: 'app-delete-opcion',\n  templateUrl: './delete-opcion.component.html',\n  styleUrls: ['./delete-opcion.component.scss']\n})\nexport class DeleteOpcionComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteOpcionComponent>,\n              @Inject(MAT_DIALOG_DATA) public opcion: Opcion,\n              public servicioOpciones: OpcionesService,\n              private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() { }\n\n  onNoClick(): void {\n    this.dialogRef.close({ok: false});\n  }\n\n  async confirmDelete() {\n    const RESPONSE = await this.servicioOpciones.deleteOpcion(this.opcion.id_opcion_menu).toPromise();\n    if (RESPONSE.ok) {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n    } else {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n    }\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>¿Seguro que deseas eliminar esta opción?</h3>\n  <div mat-dialog-content>\n    Id: {{opcion.id_opcion_menu}}\n    <p></p>\n    Opción: {{opcion.opcion}}\n    <p></p>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-button id=\"deleteOpcion\" (click)=\"confirmDelete()\">Eliminar Opción</button>\n    <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OpcionesComponent } from './opciones.component';\n\nconst routes: Routes = [{ path: '', component: OpcionesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OpcionesRoutingModule { }\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-table-container\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n      <ng-container matColumnDef=\"id_opcion_menu\">\n        <th mat-header-cell *matHeaderCellDef>\n          <input matInput [formControl]=\"idFilter\" placeholder=\"ID\">\n          <span mat-sort-header></span>\n        </th>\n        <td mat-cell *matCellDef=\"let opcion\"> {{opcion.id_opcion_menu}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"opcion\">\n        <th mat-header-cell *matHeaderCellDef>\n          <input matInput [formControl]=\"opcionFilter\" placeholder=\"Opcion\">\n          <span mat-sort-header></span>\n        </th>\n        <td mat-cell *matCellDef=\"let opcion\"> {{opcion.opcion}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> \n          <button mat-icon-button *ngIf=\"permises.add\" (click)=\"addOpcion()\">\n            <mat-icon>\n             add_circle\n            </mat-icon>\n          </button>\n        </th>\n        <td mat-cell *matCellDef=\"let opcion\">\n          <button mat-icon-button *ngIf=\"permises.edit\" (click)=\"editOpcion(opcion)\">\n            <mat-icon>\n             mode_edit\n            </mat-icon>\n          </button>\n          <button mat-icon-button *ngIf=\"permises.delete\" (click)=\"deleteOpcion(opcion)\">\n            <mat-icon>\n             delete\n            </mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n  <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddOpcionComponent } from './add-opcion/add-opcion.component';\nimport { EditOpcionComponent } from './edit-opcion/edit-opcion.component';\nimport { DeleteOpcionComponent } from './delete-opcion/delete-opcion.component';\nimport { OpcionesService } from '../services/opciones.service';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Opcion } from '../shared/interfaces/opcion';\nimport { Permises } from '../shared/interfaces/api-response';\n\n@Component({\n  selector: 'app-opciones',\n  templateUrl: './opciones.component.html',\n  styleUrls: ['./opciones.component.scss']\n})\nexport class OpcionesComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Opcion> = new MatTableDataSource();\n\n  idFilter = new FormControl();\n  opcionFilter = new FormControl();\n\n  permises: Permises;\n\n  displayedColumns: string[];\n  private filterValues = { id_opcion_menu: '', opcion: '' };\n\n  constructor(\n              public dialog: MatDialog,\n              private opcionesService: OpcionesService,\n              private overlay: Overlay\n              ) { }\n\n  ngOnInit() {\n    this.getOpciones();\n  }\n\n  async getOpciones() {\n    const RESPONSE = await this.opcionesService.getAllOpciones().toPromise();\n    this.permises = RESPONSE.permises;\n\n    if (RESPONSE.ok) {\n      this.opcionesService.opciones = RESPONSE.data as Opcion[];\n      this.displayedColumns = ['id_opcion_menu', 'opcion', 'actions'];\n      this.dataSource.data = this.opcionesService.opciones;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n\n      this.onChanges();\n    }\n  }\n\n  async addOpcion() {\n    const dialogRef = this.dialog.open(AddOpcionComponent, { scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.opcionesService.opciones.push(RESULT.data);\n        this.dataSource.data = this.opcionesService.opciones;\n      }\n    }\n  }\n\n  async editOpcion(opcion: Opcion) {\n    const dialogRef = this.dialog.open(EditOpcionComponent, { data: opcion, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.opcionesService.updateOpcion(RESULT.data);\n        this.dataSource.data = this.opcionesService.opciones;\n      }\n    }\n  }\n\n  async deleteOpcion(opcion: Opcion) {\n    const dialogRef = this.dialog.open(DeleteOpcionComponent, { data: opcion, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.opcionesService.removeOpcion(RESULT.data);\n        this.dataSource.data = this.opcionesService.opciones;\n      }\n    }\n  }\n\n  createFilter(): (opcion: Opcion, filter: string) => boolean {\n    const filterFunction = (opcion: Opcion, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return opcion.id_opcion_menu.toString().indexOf(searchTerms.id_opcion_menu) !== -1\n            && opcion.opcion.toLowerCase().indexOf(searchTerms.opcion.toLowerCase()) !== -1;\n    };\n\n    return filterFunction;\n  }\n\nonChanges(): void {\n    this.idFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.id_opcion_menu = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.opcionFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.opcion = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    });  \n  }\n\n\n}\n"]}