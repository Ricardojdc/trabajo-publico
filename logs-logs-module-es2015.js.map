{"version":3,"sources":["./src/app/logs/logs-routing.module.ts","./src/app/services/logs.service.ts","./src/app/logs/logs.component.ts","./src/app/logs/logs.component.html","./src/app/logs/logs.module.ts"],"names":[],"mappings":"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","file":"logs-logs-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogsComponent } from './logs.component';\n\nconst routes: Routes = [{ path: '', component: LogsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LogsRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_API } from 'src/environments/environment';\nimport { CommonService } from '../shared/common.service';\nimport { Log } from '../shared/interfaces/log';\nimport { ApiResponse } from '../shared/interfaces/api-response';\n\nconst ENDPOINT = 'log';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogsService {\n  // headers: any;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  //   this.headers = new HttpHeaders({\n  //     'Content-Type':  'application/json',\n  //     'Authorization': `Bearer ${this.cookieService.get('token')}`\n  //   });\n  }\n\n  getAllLogs() {\n    return this.http.get<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers } );\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LogsService } from '../services/logs.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Log } from '../shared/interfaces/log';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: MatTableDataSource<Log> = new MatTableDataSource();\n\n  idFilter = new FormControl();\n  fechaFilter = new FormControl();\n  usuarioFilter = new FormControl();\n  contenidoFilter = new FormControl();\n  tipoLogFilter = new FormControl();\n\n  displayedColumns: string[] = ['id_log', 'fecha', 'usuario', 'contenido', 'tipo_log'];\n  private filterValues = { id_log: '', fecha: '', usuario: '', contenido: '', tipo_log: '' };\n\n  constructor(public dialog: MatDialog, private logService: LogsService) { }\n\n  ngOnInit() {\n    this.getLogs();\n  }\n\n  async getLogs() {\n    const RESPONSE = await this.logService.getAllLogs().toPromise();\n    if (RESPONSE.ok) {\n      this.dataSource.data = RESPONSE.data as Log[];\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n\n      this.onChanges();\n    }\n  }\n\n  createFilter(): (log: Log, filter: string) => boolean {\n    const filterFunction = (log: Log, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return log.id_log.toString().indexOf(searchTerms.id_log) !== -1\n            && log.fecha.toLowerCase().indexOf(searchTerms.fecha.toLowerCase()) !== -1\n            && log.contenido.toLowerCase().indexOf(searchTerms.contenido.toLowerCase()) !== -1\n            && log.tipo_log.toLowerCase().indexOf(searchTerms.tipo_log.toLowerCase()) !== -1\n            && log.usuario != null ? log.usuario.toLowerCase().indexOf(searchTerms.usuario.toLowerCase()) !== -1 : false;\n    };\n    return filterFunction;\n}\n\nonChanges() {\n\n  combineLatest(\n    [this.idFilter.valueChanges.pipe(startWith('')),\n    this.fechaFilter.valueChanges.pipe(startWith('')),\n    this.usuarioFilter.valueChanges.pipe(startWith('')),\n    this.contenidoFilter.valueChanges.pipe(startWith('')),\n    this.tipoLogFilter.valueChanges.pipe(startWith(''))]\n  )\n    .subscribe(([\n      idLog,\n      fecha,\n      usuario,\n      contenido,\n      tipoLog\n    ]) => {\n      this.filterValues.id_log = idLog;\n      this.filterValues.fecha = fecha;\n      this.filterValues.usuario = usuario;\n      this.filterValues.contenido = contenido;\n      this.filterValues.tipo_log = tipoLog;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n  });\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-table-container\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"id_log\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"idFilter\" placeholder=\"ID\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.id_log}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"fecha\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"fechaFilter\" placeholder=\"Fecha\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.fecha}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"usuario\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"usuarioFilter\" placeholder=\"Usuario\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.usuario}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"contenido\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"contenidoFilter\" placeholder=\"Contenido\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.contenido}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"tipo_log\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"tipoLogFilter\" placeholder=\"TipoLog\">\n                    <span mat-sort-header></span>\n                </th>\n                \n                <td mat-cell *matCellDef=\"let log\"> {{log.tipo_log}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LogsRoutingModule } from './logs-routing.module';\nimport { LogsComponent } from './logs.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n@NgModule({\n  declarations: [LogsComponent],\n  imports: [\n    CommonModule,\n    LogsRoutingModule,\n    CrudMaterialModule\n  ]\n})\nexport class LogsModule { }\n"],"sourceRoot":"webpack:///"}