{"version":3,"sources":["./src/app/roles-menu/roles-menu-routing.module.ts","./src/app/roles-menu/edit-rol-menu/edit-rol-menu.component.ts","./src/app/roles-menu/edit-rol-menu/edit-rol-menu.component.html","./src/app/roles-menu/delete-rol-menu/delete-rol-menu.component.ts","./src/app/roles-menu/delete-rol-menu/delete-rol-menu.component.html","./src/app/roles-menu/roles-menu.component.ts","./src/app/roles-menu/roles-menu.component.html","./src/app/services/rol-menu.service.ts","./src/app/roles-menu/roles-menu.module.ts","./src/app/roles-menu/add-rol-menu/add-rol-menu.component.ts","./src/app/roles-menu/add-rol-menu/add-rol-menu.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEK;;;AAE5D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAkB,EAAE,CAAC,CAAC;AAM9D,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVyD;AACU;AACK;AAUb;;;;;;;;;;;;;;;;;ICJxC,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFyB,gFAAoB;IACtD,0DACJ;IADI,sFACJ;;;IAQA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+B,2FAA+B;IACvE,0DACJ;IADI,4FACJ;;;IAQA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF4B,yFAA6B;IAClE,0DACJ;IADI,0FACJ;;ADXb,MAAM,oBAAoB;IAO/B,YAAmB,SAA6C,EAC5C,QAAqB,EACrB,cAA6B,EAC7B,gBAAiC,EACjC,aAA2B,EAC3B,eAA+B,EACP,OAAgB;QANzC,cAAS,GAAT,SAAS,CAAoC;QAC5C,aAAQ,GAAR,QAAQ,CAAa;QACrB,mBAAc,GAAd,cAAc,CAAe;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,kBAAa,GAAb,aAAa,CAAc;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QACP,YAAO,GAAP,OAAO,CAAS;IAG5D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7E,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5E,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9E,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9E,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9E,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,KAAK,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnF,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;SAC3D,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEK,QAAQ;;YACZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;YACpE,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAa,CAAC;aACrC;QACH,CAAC;KAAA;IAEK,SAAS;;YACb,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,CAAC;YACtE,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAe,CAAC;aACxC;QACH,CAAC;KAAA;IAEK,WAAW;;YACf,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,CAAC;YAC1E,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAgB,CAAC;aAC3C;QACH,CAAC;KAAA;IAEK,UAAU;;YACd,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;gBAC7E,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6DAAY,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC;KAAA;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC,CAAC;IACpC,CAAC;;wFAxEU,oBAAoB,y5BAaX,wEAAe;oGAbxB,oBAAoB;QCnBjC,yEACI;QAAA,wEAAqB;QAAA,kFAAkB;QAAA,4DAAK;QAE5C,0EAEI;QAAA,yEACI;QAAA,iFACI;QAAA,gFACI;QAAA,8HACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,yEACI;QAAA,iFACI;QAAA,iFACI;QAAA,gIACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,kFACI;QAAA,iFACI;QAAA,gIACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,0EACoC;QACxC,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,oFACQ;QAAA,yEACR;QAAA,4DAAe;QACnB,4DAAM;QAEN,0EACQ;QAAA,oFACI;QAAA,oEACJ;QAAA,4DAAe;QACvB,4DAAM;QAEN,0EACQ;QAAA,oFACI;QAAA,oEACJ;QAAA,4DAAe;QACvB,4DAAM;QAEN,2EACI;QAAA,8EAAsG;QAAvB,6IAAS,gBAAY,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACtH,8EAAsE;QAApC,6IAAS,eAAW,IAAC;QAAe,oEAAQ;QAAA,4DAAS;QAC3F,4DAAM;QAEV,4DAAO;QACX,4DAAM;;QA/D+B,0DAAyB;QAAzB,sFAAyB;QAK9B,0DAAyB;QAAzB,8EAAyB;QAUzB,0DAA+B;QAA/B,iFAA+B;QAU/B,0DAA4B;QAA5B,+EAA4B;QAiCD,2DAA+B;QAA/B,4FAA+B;;6FD1C7E,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;sBAcc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;AEhCqB;AACe;AAI3B;;;;;;AAOvC,MAAM,sBAAsB;IAEjC,YAAmB,SAA+C,EAC9C,eAA+B,EACP,OAAgB,EACxC,QAAqB;QAHtB,cAAS,GAAT,SAAS,CAAsC;QAC9C,oBAAe,GAAf,eAAe,CAAgB;QACP,YAAO,GAAP,OAAO,CAAS;QACxC,aAAQ,GAAR,QAAQ,CAAa;IACrC,CAAC;IAEL,QAAQ,KAAI,CAAC;IAEP,aAAa;;YACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;YAChG,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAC,CAAC,CAAC;aAC9D;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACjE;QACH,CAAC;KAAA;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC,CAAC;IACpC,CAAC;;4FAtBU,sBAAsB,6VAIb,wEAAe;sGAJxB,sBAAsB;QCZnC,yEACI;QAAA,wEAAqB;QAAA,kFAAkB;QAAA,4DAAK;QAE5C,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;QAC3B,qEACI;QAAA,qEAAI;QAAA,uDAAsB;QAAA,4DAAK;QAC/B,qEAAI;QAAA,uDAA0B;QAAA,4DAAK;QACnC,sEAAI;QAAA,wDAA4B;QAAA,4DAAK;QACrC,sEAAI;QAAA,wDAA0C;QAAA,4DAAK;QACvD,4DAAK;QACL,0EACI;QAAA,6EAA8E;QAA1B,+IAAS,mBAAe,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAC/F,6EAAsE;QAApC,+IAAS,eAAW,IAAC;QAAe,oEAAQ;QAAA,4DAAS;QAC3F,4DAAM;QACV,4DAAM;;QATM,0DAAsB;QAAtB,8FAAsB;QACtB,0DAA0B;QAA1B,kGAA0B;QAC1B,0DAA4B;QAA5B,yGAA4B;QAC5B,0DAA0C;QAA1C,kHAA0C;;6FDIzC,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;sBAKc,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBwB;AAEF;AACV;AAEY;AACe;AACG;AACM;AACxC;;;;;;;;;;;;;;ICJ7B,yEACI;IAAA,uEACA;IAAA,sEAA6B;IACjC,4DAAK;;;IAFe,0DAAyB;IAAzB,yFAAyB;;;IAG7C,yEAAwC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,2FAAgB;;;IAIxD,yEACI;IAAA,uEACA;IAAA,sEAA6B;IACjC,4DAAK;;;IAFe,0DAA2B;IAA3B,2FAA2B;;;IAG/C,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEACI;IAAA,uEACA;IAAA,sEAA6B;IACjC,4DAAK;;;IAFe,0DAA4B;IAA5B,4FAA4B;;;IAGhD,yEAAwC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;;IAKvD,6EACI;IADyC,oUAAsB;IAC/D,2EACI;IAAA,uEACJ;IAAA,4DAAW;IACf,4DAAS;;;IALb,yEACI;IAAA,2HACI;IAGK,4DAAK;;;IAJU,0DAAoB;IAApB,qFAAoB;;;;IAM5C,6EACI;IAD0C,4aAA8B;IACxE,2EACI;IAAA,sEACJ;IAAA,4DAAW;IACf,4DAAS;;;;IACT,6EACI;IAD4C,8aAAgC;IAC5E,2EACI;IAAA,mEACJ;IAAA,4DAAW;IACf,4DAAS;;;IAVb,yEACI;IAAA,2HACI;IAIJ,2HACI;IAIR,4DAAK;;;IAVuB,0DAAqB;IAArB,sFAAqB;IAKrB,0DAAuB;IAAvB,wFAAuB;;;IAQvD,oEAA4D;;;IAC5D,oEAAkE;;;AD7BvE,MAAM,kBAAkB;IAgB7B,YACmB,MAAiB,EAChB,gBAAgC,EAChC,OAAgB;QAFjB,WAAM,GAAN,MAAM,CAAW;QAChB,qBAAgB,GAAhB,gBAAgB,CAAgB;QAChC,YAAO,GAAP,OAAO,CAAS;QAdpC,eAAU,GAAgC,IAAI,0EAAkB,EAAE,CAAC;QAEnE,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;QAChC,iBAAY,GAAG,IAAI,0DAAW,EAAE,CAAC;QAKzB,iBAAY,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IAM1C,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEK,QAAQ;;YACZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;YAC3E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAClC,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAiB,CAAC;gBAC7D,IAAI,CAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;gBACvD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3C,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEtD,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC;KAAA;IAEK,UAAU;;YACd,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wFAAmB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAClH,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;YACzD,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,EAAE,EAAE;oBACb,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAClD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBACxD;aACF;QACH,CAAC;KAAA;IAEK,WAAW,CAAC,OAAgB;;YAChC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAClI,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;YACzD,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,EAAE,EAAE;oBACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACjD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBACxD;aACF;QACH,CAAC;KAAA;IAEK,aAAa,CAAC,OAAgB;;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACpI,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;YACzD,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,EAAE,EAAE;oBACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACjD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBACxD;aACF;QACH,CAAC;KAAA;IAED,YAAY;QACV,MAAM,cAAc,GAAG,CAAC,GAAY,EAAE,MAAc,EAAW,EAAE;YAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEvC,OAAO,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;mBACnE,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;mBACvE,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC;QAEF,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,YAAY;aAC1B,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,YAAY;aAC5B,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,YAAY;aAC7B,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IAEL,CAAC;;oFAzGU,kBAAkB;kGAAlB,kBAAkB;wEAClB,wEAAY;wEACZ,8DAAO;;;;;;QCvBpB,yEACI;QAAA,yEACI;QAAA,2EAEI;QAAA,2EACI;QAAA,4GACI;QAGJ,4GAAwC;QAC5C,qEAAe;QAEf,2EACI;QAAA,4GACI;QAGJ,4GAAwC;QAC5C,qEAAe;QAEf,2EACI;QAAA,8GACI;QAGJ,8GAAwC;QAC5C,qEAAe;QAEf,4EACI;QAAA,8GACI;QAKJ,8GACI;QAWR,qEAAe;QAEf,8GAAuD;QACvD,+GAA6D;QACjE,4DAAQ;QACZ,4DAAM;QACN,oFAA0F;QAE9F,4DAAM;;QArDmB,0DAAyB;QAAzB,sFAAyB;QA+CnB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAG1C,0DAAe;QAAf,wEAAe;;6FDhChC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;iRAE4C,SAAS;kBAAnD,uDAAS;mBAAC,wEAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YACH,IAAI;kBAAzC,uDAAS;mBAAC,8DAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AEvBtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGY;;;;AAKvD,MAAM,QAAQ,GAAG,UAAU,CAAC;AAKrB,MAAM,cAAc;IAIzB,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;IAC1E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,oEAAO,IAAI,QAAQ,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3G,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,GAAG,oEAAO,IAAI,QAAQ,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;IAClH,CAAC;IAGD,WAAW,CAAC,OAAgB;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,oEAAO,IAAI,QAAQ,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;IACjH,CAAC;IAED,aAAa,CAAC,SAA0B;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAc,GAAG,oEAAO,IAAI,QAAQ,WAAW,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;IAC9H,CAAC;IAED,aAAa,CAAC,SAAS;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAC/C,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE;YACnD,IAAI,OAAO,CAAC,WAAW,KAAK,aAAa,CAAC,WAAW,EAAE;gBACrD,KAAK,GAAG,WAAW,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;SACjC;IACH,CAAC;;4EA3CU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEsB;AACT;AACgB;AACG;AACM;AACF;;AAoB5E,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBAVjB;YACP,4DAAY;YACZ,iFAAsB;YACtB,8FAAkB;SACnB;mIAMU,eAAe,mBAfxB,wEAAkB;QAClB,wFAAmB;QACnB,2FAAoB;QACpB,iGAAsB,aAGtB,4DAAY;QACZ,iFAAsB;QACtB,8FAAkB;6FAOT,eAAe;cAjB3B,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,wEAAkB;oBAClB,wFAAmB;oBACnB,2FAAoB;oBACpB,iGAAsB;iBACvB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,iFAAsB;oBACtB,8FAAkB;iBACnB,EAAE,eAAe,EAAE;oBAClB,wFAAmB;oBACnB,2FAAoB;oBACpB,iGAAsB;iBACvB;aACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BiD;AAEkB;AASR;;;;;;;;;;;;;;;;;ICHxC,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFyB,gFAAoB;IACtD,0DACJ;IADI,sFACJ;;;IAQA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+B,2FAA+B;IACvE,0DACJ;IADI,4FACJ;;;IAQA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF4B,yFAA6B;IAClE,0DACJ;IADI,0FACJ;;ADZb,MAAM,mBAAmB;IAa9B,YAAmB,SAA4C,EAC3C,QAAqB,EACrB,cAA6B,EAC7B,gBAAiC,EACjC,aAA2B,EAC3B,eAA+B;QALhC,cAAS,GAAT,SAAS,CAAmC;QAC3C,aAAQ,GAAR,QAAQ,CAAa;QACrB,mBAAc,GAAd,cAAc,CAAe;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,kBAAa,GAAb,aAAa,CAAc;QAC3B,oBAAe,GAAf,eAAe,CAAgB;QAXnD,aAAQ,GAAG;YACT,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,KAAK;SACd,CAAC;IAUF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9D,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACrC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEK,QAAQ;;YACZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;YACpE,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAa,CAAC;aACrC;QACH,CAAC;KAAA;IAEK,SAAS;;YACb,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,CAAC;YACtE,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAe,CAAC;aACxC;QACH,CAAC;KAAA;IAEK,WAAW;;YACf,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,CAAC;YAC1E,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAgB,CAAC;aAC3C;QACH,CAAC;KAAA;IAED,SAAS,CAAC,KAAa;QACrB,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YAC9C,OAAO,GAAG,CAAC,GAAG,KAAK,YAAY,CAAC;QAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAEb,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,eAAe,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;YAE9D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACjE;IACH,CAAC;IAEK,UAAU;;YACd,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;gBAC5E,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6DAAY,EAAE,sDAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC;KAAA;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC,CAAC;IACpC,CAAC;;sFAhGU,mBAAmB;mGAAnB,mBAAmB;QClBhC,yEACI;QAAA,wEAAqB;QAAA,uFAAkB;QAAA,4DAAK;QAE5C,0EAEI;QAAA,yEACI;QAAA,iFACI;QAAA,gFACI;QADiC,yKAAmB,2BAAuB,IAAC;QAC5E,6HACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,yEACI;QAAA,iFACI;QAAA,iFACI;QAAA,+HACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,kFACI;QAAA,iFACI;QAAA,+HACI;QAER,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,0EACoC;QACxC,4DAAiB;QACrB,4DAAM;QAEN,0EACQ;QAAA,oFACI;QAAA,yEACJ;QAAA,4DAAe;QACvB,4DAAM;QAEN,0EACQ;QAAA,oFACI;QAAA,oEACJ;QAAA,4DAAe;QACvB,4DAAM;QAEN,0EACQ;QAAA,oFACI;QAAA,oEACJ;QAAA,4DAAe;QACvB,4DAAM;QAEN,2EACI;QAAA,8EAAsG;QAAvB,4IAAS,gBAAY,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACtH,8EAAsE;QAApC,4IAAS,eAAW,IAAC;QAAe,oEAAQ;QAAA,4DAAS;QAC3F,4DAAM;QAEV,4DAAO;QACX,4DAAM;;QA/D+B,0DAAyB;QAAzB,sFAAyB;QAK9B,0DAAyB;QAAzB,8EAAyB;QAUzB,0DAA+B;QAA/B,iFAA+B;QAU/B,0DAA4B;QAA5B,+EAA4B;QAiCD,2DAA+B;QAA/B,4FAA+B;;6FD3C7E,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C","file":"roles-menu-roles-menu-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RolesMenuComponent } from './roles-menu.component';\n\nconst routes: Routes = [{ path: '', component: RolesMenuComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesMenuRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GruposService } from 'src/app/services/grupos.service';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { RolMenu } from 'src/app/shared/interfaces/rol-menu';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { Grupo } from 'src/app/shared/interfaces/grupo';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-edit-rol-menu',\n  templateUrl: './edit-rol-menu.component.html',\n  styleUrls: ['./edit-rol-menu.component.scss']\n})\nexport class EditRolMenuComponent implements OnInit {\n\n  rolMenuForm: FormGroup;\n  roles: Rol[];\n  grupos: Grupo[];\n  opciones: Opcion[];\n\n  constructor(public dialogRef: MatDialogRef<EditRolMenuComponent>,\n              private snackBar: MatSnackBar,\n              private servicioGrupos: GruposService,\n              private servicioOpciones: OpcionesService,\n              private servicioRoles: RolesService,\n              private servicioRolMenu: RolMenuService,\n              @Inject(MAT_DIALOG_DATA) public rolMenu: RolMenu\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.rolMenuForm = new FormGroup({\n      id_rol_menu: new FormControl(this.rolMenu.id_rol_menu, [Validators.required]),\n      id_rol: new FormControl(this.rolMenu.id_rol, [Validators.required]),\n      id_grupo: new FormControl(this.rolMenu.id_grupo_menu, [Validators.required]),\n      id_opcion: new FormControl(this.rolMenu.id_opcion_menu, [Validators.required]),\n      add: new FormControl(this.rolMenu.permiso_post === '1', [Validators.required]),\n      edit: new FormControl(this.rolMenu.permiso_put === '1', [Validators.required]),\n      delete: new FormControl(this.rolMenu.permiso_delete === '1', [Validators.required]),\n      observaciones: new FormControl(this.rolMenu.observaciones)\n    });\n    this.getRoles();\n    this.getGrupos();\n    this.getOpciones();\n  }\n\n  async getRoles() {\n    const REPSONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (REPSONSE.ok) {\n      this.roles = REPSONSE.data as Rol[];\n    }\n  }\n\n  async getGrupos() {\n    const REPSONSE = await this.servicioGrupos.getAllGrupos().toPromise();\n    if (REPSONSE.ok) {\n      this.grupos = REPSONSE.data as Grupo[];\n    }\n  }\n\n  async getOpciones() {\n    const REPSONSE = await this.servicioOpciones.getAllOpciones().toPromise();\n    if (REPSONSE.ok) {\n      this.opciones = REPSONSE.data as Opcion[];\n    }\n  }\n\n  async confirmAdd() {\n    if (this.rolMenuForm.valid) {\n      const rolMenu = this.rolMenuForm.value;\n      const RESPONSE = await this.servicioRolMenu.editRolMenu(rolMenu).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Editar rol de menú</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"rolMenuForm\">\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_rol\" placeholder=\"Rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{ rol.rol }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_opcion\" placeholder=\"Opcion\">\n                    <mat-option *ngFor=\"let opcion of opciones\" [value]=\"opcion.id_opcion_menu\">\n                        {{ opcion.opcion }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_grupo\" placeholder=\"Grupo\">\n                    <mat-option *ngFor=\"let grupo of grupos\" [value]=\"grupo.id_grupo_menu\">\n                        {{ grupo.grupo }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-checkbox formControlName=\"add\">\n                    Añadir\n            </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"edit\">\n                    Editar\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"delete\">\n                    Borrar\n                </mat-checkbox>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\" [disabled]=\"!rolMenuForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RolMenu } from 'src/app/shared/interfaces/rol-menu';\nimport { CLOSE } from '../../shared/messages';\n\n@Component({\n  selector: 'app-delete-rol-menu',\n  templateUrl: './delete-rol-menu.component.html',\n  styleUrls: ['./delete-rol-menu.component.scss']\n})\nexport class DeleteRolMenuComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteRolMenuComponent>,\n              private servicioRolMenu: RolMenuService,\n              @Inject(MAT_DIALOG_DATA) public rolMenu: RolMenu,\n              private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {}\n\n  async deleteRolMenu() {\n    const RESPONSE = await this.servicioRolMenu.deleteRolMenu(this.rolMenu.id_rol_menu).toPromise();\n    if (RESPONSE.ok) {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n    } else {\n      this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Borrar rol de menú</h3>\n\n    <p>Datos del registro: </p>\n    <ul>\n        <li>Rol: {{ rolMenu.rol }}</li>\n        <li>Grupo: {{ rolMenu.grupo }}</li>\n        <li>Opción: {{ rolMenu.opcion }}</li>\n        <li>Observaciones: {{ rolMenu.observaciones }}</li>\n    </ul>\n    <div mat-dialog-actions>\n        <button mat-button id=\"deleteRolMenu\" type=\"submit\" (click)=\"deleteRolMenu()\">Eliminar</button>\n        <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RolMenuService } from '../services/rol-menu.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddRolMenuComponent } from './add-rol-menu/add-rol-menu.component';\nimport { EditRolMenuComponent } from './edit-rol-menu/edit-rol-menu.component';\nimport { DeleteRolMenuComponent } from './delete-rol-menu/delete-rol-menu.component';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { RolMenu } from '../shared/interfaces/rol-menu';\nimport { Permises } from '../shared/interfaces/api-response';\n\n@Component({\n  selector: 'app-roles-menu',\n  templateUrl: './roles-menu.component.html',\n  styleUrls: ['./roles-menu.component.scss']\n})\nexport class RolesMenuComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  rolesMenu: RolMenu;\n  dataSource: MatTableDataSource<RolMenu> = new MatTableDataSource();\n\n  rolFilter = new FormControl();\n  grupoFilter = new FormControl();\n  opcionFilter = new FormControl();\n\n  permises: Permises;\n\n  displayedColumns: string[];\n  private filterValues = { rol: '', grupo: '', opcion: '' };\n\n  constructor(\n              public dialog: MatDialog,\n              private rolesMenuService: RolMenuService,\n              private overlay: Overlay\n              ) { }\n\n  ngOnInit() {\n    this.getRoles();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.rolesMenuService.getAllRolesMenu().toPromise();\n    this.permises = RESPONSE.permises;\n    if (RESPONSE.ok) {\n      this.rolesMenuService.rolesMenu = RESPONSE.data as RolMenu[];\n      this.displayedColumns = ['rol', 'grupo', 'opcion', 'actions'];\n      this.dataSource.data = this.rolesMenuService.rolesMenu;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.filterPredicate = this.createFilter();\n\n      this.onChanges();\n    }\n  }\n\n  async addRolMenu() {\n    const dialogRef = this.dialog.open(AddRolMenuComponent, { scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.rolesMenu.push(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  async editRolMenu(rolMenu: RolMenu) {\n    const dialogRef = this.dialog.open(EditRolMenuComponent, { data: rolMenu, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.updateRolMenu(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  async deleteRolMenu(rolMenu: RolMenu) {\n    const dialogRef = this.dialog.open(DeleteRolMenuComponent, { data: rolMenu, scrollStrategy: this.overlay.scrollStrategies.noop() });\n    const RESULT = await dialogRef.afterClosed().toPromise();\n    if (RESULT) {\n      if (RESULT.ok) {\n        this.rolesMenuService.removeRolMenu(RESULT.data);\n        this.dataSource.data = this.rolesMenuService.rolesMenu;\n      }\n    }\n  }\n\n  createFilter(): (rol: RolMenu, filter: string) => boolean {\n    const filterFunction = (rol: RolMenu, filter: string): boolean => {\n        const searchTerms = JSON.parse(filter);\n\n        return rol.rol.toLowerCase().indexOf(searchTerms.rol.toLowerCase()) !== -1\n            && rol.grupo.toLowerCase().indexOf(searchTerms.grupo.toLowerCase()) !== -1\n            && rol.opcion.toLowerCase().indexOf(searchTerms.opcion.toLowerCase()) !== -1;\n    };\n\n    return filterFunction;\n  }\n\n  onChanges() {\n    this.rolFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.rol = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.grupoFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.grupo = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    }); \n\n    this.opcionFilter.valueChanges\n    .subscribe(value => {\n        this.filterValues.opcion = value;\n        this.dataSource.filter = JSON.stringify(this.filterValues);\n    }); \n\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-table-container\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"rol\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"rolFilter\" placeholder=\"Rol\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.rol}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"grupo\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"grupoFilter\" placeholder=\"Grupo\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.grupo}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"opcion\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <input matInput [formControl]=\"opcionFilter\" placeholder=\"Opcion\">\n                    <span mat-sort-header></span>\n                </th>\n                <td mat-cell *matCellDef=\"let rolMenu\"> {{rolMenu.opcion}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> \n                    <button mat-icon-button *ngIf=\"permises.add\" (click)=\"addRolMenu()\">\n                        <mat-icon>\n                            add_circle\n                        </mat-icon>\n                    </button></th>\n                <td mat-cell *matCellDef=\"let rolMenu\">\n                    <button mat-icon-button *ngIf=\"permises.edit\" (click)=\"editRolMenu(rolMenu)\">\n                        <mat-icon>\n                            mode_edit\n                        </mat-icon>\n                    </button>\n                    <button mat-icon-button *ngIf=\"permises.delete\" (click)=\"deleteRolMenu(rolMenu)\">\n                        <mat-icon>\n                            delete\n                        </mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n\n</div>\n<!-- <router-outlet></router-outlet> -->","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { URL_API } from 'src/environments/environment';\nimport { CommonService } from '../shared/common.service';\nimport { RolMenu } from '../shared/interfaces/rol-menu';\nimport { ApiResponse } from '../shared/interfaces/api-response';\n\nconst ENDPOINT = 'rol_menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolMenuService {\n\n  rolesMenu: RolMenu[];\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  }\n\n  getAllRolesMenu() {\n    return this.http.get<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers });\n  }\n\n  addRolMenu(rolMenu: RolMenu) {\n    const body = JSON.stringify(rolMenu);\n    return this.http.post<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n\n  editRolMenu(rolMenu: RolMenu) {\n    const body = JSON.stringify(rolMenu);\n    return this.http.put<ApiResponse>(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n  deleteRolMenu(idRolMenu: string | number) {\n    return this.http.delete<ApiResponse>(`${URL_API}/${ENDPOINT}.php?id=${idRolMenu}`, { headers: this.commonService.headers });\n  }\n\n  removeRolMenu(idRolMenu) {\n    this.rolesMenu = this.rolesMenu.filter(rolMenu => {\n      return Number(rolMenu.id_rol_menu) !== Number(idRolMenu);\n    });\n  }\n\n  updateRolMenu(rolMenu: RolMenu) {\n    let index = null;\n    this.rolesMenu.filter((rolMenuFilter, indexFilter) => {\n      if (rolMenu.id_rol_menu === rolMenuFilter.id_rol_menu) {\n        index = indexFilter;\n      }\n    });\n\n    if (index) {\n      this.rolesMenu[index] = rolMenu;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RolesMenuRoutingModule } from './roles-menu-routing.module';\nimport { RolesMenuComponent } from './roles-menu.component';\nimport { AddRolMenuComponent } from './add-rol-menu/add-rol-menu.component';\nimport { EditRolMenuComponent } from './edit-rol-menu/edit-rol-menu.component';\nimport { DeleteRolMenuComponent } from './delete-rol-menu/delete-rol-menu.component';\nimport { CrudMaterialModule } from '../modules/crud-material/crud-material.module';\n\n\n@NgModule({\n  declarations: [\n    RolesMenuComponent, \n    AddRolMenuComponent, \n    EditRolMenuComponent, \n    DeleteRolMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    RolesMenuRoutingModule,\n    CrudMaterialModule\n  ], entryComponents: [\n    AddRolMenuComponent, \n    EditRolMenuComponent, \n    DeleteRolMenuComponent\n  ]\n})\nexport class RolesMenuModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { RolMenuService } from 'src/app/services/rol-menu.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GruposService } from 'src/app/services/grupos.service';\nimport { OpcionesService } from 'src/app/services/opciones.service';\nimport { RolesService } from 'src/app/services/roles.service';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { Grupo } from 'src/app/shared/interfaces/grupo';\nimport { Opcion } from 'src/app/shared/interfaces/opcion';\nimport { CLOSE, INVALID_FORM } from '../../shared/messages';\n\n@Component({\n  selector: 'app-add-rol-menu',\n  templateUrl: './add-rol-menu.component.html',\n  styleUrls: ['./add-rol-menu.component.scss']\n})\nexport class AddRolMenuComponent implements OnInit {\n\n  rolMenuForm: FormGroup;\n  roles: Rol[];\n  grupos: Grupo[];\n  opciones: Opcion[];\n\n  permises = {\n    add: false,\n    edit: false,\n    delete: false,\n  };\n\n  constructor(public dialogRef: MatDialogRef<AddRolMenuComponent>,\n              private snackBar: MatSnackBar,\n              private servicioGrupos: GruposService,\n              private servicioOpciones: OpcionesService,\n              private servicioRoles: RolesService,\n              private servicioRolMenu: RolMenuService\n    ) {\n\n  }\n\n  ngOnInit() {\n    this.rolMenuForm = new FormGroup({\n      id_rol: new FormControl(null, [Validators.required]),\n      id_grupo: new FormControl(null, [Validators.required]),\n      id_opcion: new FormControl(null, [Validators.required]),\n      add: new FormControl(this.permises.add, [Validators.required]),\n      edit: new FormControl(this.permises.edit, [Validators.required]),\n      delete: new FormControl(this.permises.delete, [Validators.required]),\n      observaciones: new FormControl(null)\n    });\n    this.getRoles();\n    this.getGrupos();\n    this.getOpciones();\n  }\n\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE.ok) {\n      this.roles = RESPONSE.data as Rol[];\n    }\n  }\n\n  async getGrupos() {\n    const RESPONSE = await this.servicioGrupos.getAllGrupos().toPromise();\n    if (RESPONSE.ok) {\n      this.grupos = RESPONSE.data as Grupo[];\n    }\n  }\n\n  async getOpciones() {\n    const RESPONSE = await this.servicioOpciones.getAllOpciones().toPromise();\n    if (RESPONSE.ok) {\n      this.opciones = RESPONSE.data as Opcion[];\n    }\n  }\n\n  selectRol(idRol: string) {\n    const idRolSuperadmin = this.roles.filter(rol => {\n      return rol.rol === 'Superadmin';\n    })[0].id_rol;\n\n    if (Number(idRol) === Number(idRolSuperadmin)) {\n      this.permises.add = this.rolMenuForm.controls.add.value;\n      this.permises.edit = this.rolMenuForm.controls.edit.value;\n      this.permises.delete = this.rolMenuForm.controls.delete.value;\n\n      this.rolMenuForm.controls.add.setValue(true);\n      this.rolMenuForm.controls.edit.setValue(true);\n      this.rolMenuForm.controls.delete.setValue(true);\n    } else {\n      this.rolMenuForm.controls.add.setValue(this.permises.add);\n      this.rolMenuForm.controls.edit.setValue(this.permises.edit);\n      this.rolMenuForm.controls.delete.setValue(this.permises.delete);\n    }\n  }\n\n  async confirmAdd() {\n    if (this.rolMenuForm.valid) {\n      const rolMenu = this.rolMenuForm.value;\n      const RESPONSE = await this.servicioRolMenu.addRolMenu(rolMenu).toPromise();\n      if (RESPONSE.ok) {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n        this.dialogRef.close({ok: RESPONSE.ok, data: RESPONSE.data});\n      } else {\n        this.snackBar.open(RESPONSE.message, CLOSE, { duration: 5000 });\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  onNoClick() {\n    this.dialogRef.close({ok: false});\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Añadir rol de menú</h3>\n\n    <form class=\"mat-dialog-content\" [formGroup]=\"rolMenuForm\">\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_rol\" (selectionChange)=\"selectRol($event.value)\" placeholder=\"Rol\">\n                    <mat-option *ngFor=\"let rol of roles\" [value]=\"rol.id_rol\">\n                        {{ rol.rol }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_opcion\" placeholder=\"Opcion\">\n                    <mat-option *ngFor=\"let opcion of opciones\" [value]=\"opcion.id_opcion_menu\">\n                        {{ opcion.opcion }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field>\n                <mat-select formControlName=\"id_grupo\" placeholder=\"Grupo\">\n                    <mat-option *ngFor=\"let grupo of grupos\" [value]=\"grupo.id_grupo_menu\">\n                        {{ grupo.grupo }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n            <mat-form-field color=\"accent\">\n                <textarea matInput placeholder=\"Observaciones\" formControlName=\"observaciones\"\n                    name=\"observaciones\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"add\">\n                    Añadir\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"edit\">\n                    Editar\n                </mat-checkbox>\n        </div>\n\n        <div class=\"form\">\n                <mat-checkbox formControlName=\"delete\">\n                    Borrar\n                </mat-checkbox>\n        </div>\n\n        <div mat-dialog-actions>\n            <button mat-button id=\"onSubmit\" type=\"submit\" [disabled]=\"!rolMenuForm.valid\" (click)=\"confirmAdd()\">Guardar</button>\n            <button mat-button id=\"onNoClick\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancelar</button>\n        </div>\n\n    </form>\n</div>"],"sourceRoot":"webpack:///"}